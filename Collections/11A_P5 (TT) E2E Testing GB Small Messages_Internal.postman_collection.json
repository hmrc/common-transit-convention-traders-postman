{
	"info": {
		"_postman_id": "02c34002-29e8-4230-b7d4-c951481a73d9",
		"name": "11A_P5 (TT) E2E Testing GB Small Messages_Internal",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26102216"
	},
	"item": [
		{
			"name": "Simplified",
			"item": [
				{
					"name": "01 - Simplified Departure Single house consignment to single consignee Data",
					"item": [
						{
							"name": "01- POST IE015 Simplified",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"let LRN=\"TRATESTGB1\";",
											"let charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>GB boxes to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "01- POST IE015 Simplified Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"let LRN=\"TRATESTGB1\";",
											"let charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n        <name>GB E2E TT</name>\n        <Address>\n            <streetAndNumber>14 Westfield Avenue</streetAndNumber>\n            <postcode>E20 1HZ</postcode>\n            <city>Stratford, London</city>\n            <country>GB</country>\n        </Address>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n             <name>GB E2E TT</name>\n            <Address>\n                <streetAndNumber>14 Westfield Avenue</streetAndNumber>\n                <postcode>E20 1HZ</postcode>\n                <city>Stratford, London</city>\n                <country>GB</country>\n            </Address>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n            <name>XI E2E TT</name>\n            <Address>\n                <streetAndNumber>Custom House, Custom Square</streetAndNumber>\n                <postcode>BT1 3ET</postcode>\n                <city>Belfast</city>\n                <country>XI</country>\n            </Address>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000</grossMass>\n                        <netMass>950.000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>GB boxes to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "01- POST IE015 Simplified Copy 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"let LRN=\"TRATESTGB1\";",
											"let charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n        <name>GB E2E TT</name>\n        <Address>\n            <streetAndNumber>14 Westfield Avenue</streetAndNumber>\n            <postcode>E20 1HZ</postcode>\n            <city>Stratford, London</city>\n            <country>GB</country>\n        </Address>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n             <name>GB E2E TT</name>\n            <Address>\n                <streetAndNumber>14 Westfield Avenue</streetAndNumber>\n                <postcode>E20 1HZ</postcode>\n                <city>Stratford, London</city>\n                <country>GB</country>\n            </Address>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n            <name>XI E2E TT</name>\n            <Address>\n                <streetAndNumber>Custom House, Custom Square</streetAndNumber>\n                <postcode>BT1 3ET</postcode>\n                <city>Belfast</city>\n                <country>XI</country>\n            </Address>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000</grossMass>\n                        <netMass>950.000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>GB boxes to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 ->IE928->IE028->IE29",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/6523d8e29417cc50/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"6523d8e29417cc50",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "03 - Simplified Departure Safety and Security data",
					"item": [
						{
							"name": "01- POST IE015 Simplified Security",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"var LRN=\"TRATESTGB3\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>1</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <modeOfTransportAtTheBorder>1</modeOfTransportAtTheBorder>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>20</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <CountryOfRoutingOfConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <country>XI</country>\n        </CountryOfRoutingOfConsignment>\n        <ActiveBorderTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <customsOfficeAtBorderReferenceNumber>GB000246</customsOfficeAtBorderReferenceNumber>\n            <typeOfIdentification>11</typeOfIdentification>\n            <identificationNumber>Spideychelle</identificationNumber>\n            <nationality>GB</nationality>\n        </ActiveBorderTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <PlaceOfUnloading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfUnloading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Coffee Beans</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET ALL IE015 > IE928 -> IE028 -> IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64dded0e2a74584a/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64dded0e2a74584a",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET ALL IE015 > IE928 -> IE028 -> IE029 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64dded0e2a74584a/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64dded0e2a74584a",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "06A - Simplified Departure with invalid GRN",
					"item": [
						{
							"name": "01- POST IE015 with invalid GRN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"var LRN=\"TRATESTGB6\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>GB boxes to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 → IE928 →IE028 → IE055 → IE051",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64a54b9990e725ca/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64a54b9990e725ca",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "07 - Simplified Departure with Amendments",
					"item": [
						{
							"name": "01- POST IE015 Simplified",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"var LRN=\"TRATESTGB7\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n       <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n          <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>GB goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64c8be35fc83f2dd/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64c8be35fc83f2dd",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- POST IE013",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"var LRN=\"TRATEST7\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('3', 'days');",
											"",
											"var LRN=\"TRATEST7\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"now\", moment().format(\"YYYY-MM-DD\"));",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYYMMDDHHmmss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DD\"));",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC013C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246JHSAY3J5</MRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n       <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n          <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                     <shippingMarks>GB goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"{{departureId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "04- GET ALL IE015 → IE928 →IE028→IE013-> IE004->IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/6449438b1f544a87/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"6449438b1f544a87",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "09 - Simplified Departure with Cancellation before release for transit",
					"item": [
						{
							"name": "01- POST IE015 Simplified",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"var LRN=\"TRATESTGB9\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"now\", moment().format(\"YYYY-MM-DD hh:mm:ss\"));",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64c908c698b5e804/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64c908c698b5e804",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- POST IE014",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add(642, 'seconds')",
											"",
											"",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"decisionDateAndTime\", now.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
											"pm.environment.set(\"messageId\",messageId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246ZPABRDJ3</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container is broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures/64c908c698b5e804/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64c908c698b5e804",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "04- GET ALL IE015 → IE928 →IE028→IE014→ IE009",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"{{departureId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "11 - Simplified Departure with Cancellation after release for transit",
					"item": [
						{
							"name": "01- POST IE015 Simplified",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"let LRN=\"TRATESTGB11\";",
											"let charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64621049b3fa9de0/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64621049b3fa9de0",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "04- POST IE014",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('3', 'days');",
											"",
											"var LRN=\"TRATEST9\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"now\", moment().format(\"YYYY-MM-DD hh:mm:ss\"));",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
											"//depId = depId.split(\"/\")[5]",
											"pm.environment.set(\"messageId\",messageId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{IntConRefMES11}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246XSWGMLJ3</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container is broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures/64621049b3fa9de0/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64621049b3fa9de0",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "05- GET ALL IE015 → IE928 →IE028→IE029→IE014→ IE056",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64620f14b6cfa291/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64620f14b6cfa291",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "13 - Simplified Departure with Officer Cancels Movement after release for transit",
					"item": [
						{
							"name": "01- POST IE015 Simplified",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"let LRN=\"TRATESTGB13\";",
											"let charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n       <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET ALL IE015 → IE928 →IE028→IE029→ IE009",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64a55125896b7195/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64a55125896b7195",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "14 - Simplified Departure with Control by office of departure satisfactory",
					"item": [
						{
							"name": "01- POST IE015 Simplified",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"let LRN=\"TRATESTGB14\";",
											"let charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET ALL IE015 → IE928 →IE028→ IE060 → IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64c90ab97c989987/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64c90ab97c989987",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "16 - Simplified Departure with Control by office of departure unsatisfactory",
					"item": [
						{
							"name": "01- POST IE015 Simplified",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"let LRN=\"TRATESTGB16\";",
											"let charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET ALL IE015 → IE928 →IE028→ IE060→ IE051",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/646219b2d741c3d8/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"646219b2d741c3d8",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "19 - Simplified Departure with Multiple house consignor to multiple consignee",
					"item": [
						{
							"name": "01- POST IE015 Simplified",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"let LRN=\"TRATESTGB19\";",
											"let charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1022.000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000</grossMass>\n            <Consignor>\n                <identificationNumber>GB953574106000</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000</grossMass>\n                        <netMass>950.000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n        <HouseConsignment>\n            <sequenceNumber>2</sequenceNumber>\n            <grossMass>22.000000</grossMass>\n            <Consignor>\n                <identificationNumber>XI175521246821</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Daffodils</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>871200</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>22.000000</grossMass>\n                        <netMass>20.000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>GB box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 → IE928 →IE028→ IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64c90828eaec3a87/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64c90828eaec3a87",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Normal",
			"item": [
				{
					"name": "02 - Normal Departure Single house consignment to single consignee Data",
					"item": [
						{
							"name": "01- POST IE015 Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"var LRN=\"TRATESTGB2\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n          <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "01- POST IE015 Normal Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"var LRN=\"TRATESTGB2\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB954131533000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n          <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000</grossMass>\n                        <netMass>950.000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET ALL IE015 > IE928 -> IE028 -> IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"{{departureId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "03A - Normal Departure Safety and Security data",
					"item": [
						{
							"name": "01- POST IE015 Normal Security",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"var LRN=\"TRATESTGB3\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>1</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <modeOfTransportAtTheBorder>1</modeOfTransportAtTheBorder>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <CountryOfRoutingOfConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <country>XI</country>\n        </CountryOfRoutingOfConsignment>\n        <ActiveBorderTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <customsOfficeAtBorderReferenceNumber>GB000246</customsOfficeAtBorderReferenceNumber>\n            <typeOfIdentification>11</typeOfIdentification>\n            <identificationNumber>Spideychelle</identificationNumber>\n            <nationality>GB</nationality>\n        </ActiveBorderTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <PlaceOfUnloading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfUnloading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET ALL IE015 > IE928 -> IE028 -> IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64a563d168c10627/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64a563d168c10627",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "06 - Normal Departure with invalid GRN",
					"item": [
						{
							"name": "01- POST IE015 Normal with invalid GRN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"var LRN=\"TRATESTGB6\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n       <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n          <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 → IE928 →IE028 → IE055 → IE051",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/652506c226937513/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"652506c226937513",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "08 - Normal Departure Positive with Amendments",
					"item": [
						{
							"name": "01- POST IE015 Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"var LRN=\"TRATESTGB8\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 → IE928 →IE028",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64439741de3f6b1f/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64439741de3f6b1f",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- POST IE013",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"var LRN=\"TRATEST7\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('3', 'days');",
											"",
											"var LRN=\"TRATEST7\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"now\", moment().format(\"YYYY-MM-DD\"));",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYYMMDDHHmmss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DD\"));",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC013C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246NEXJ5OJ2</MRN>\n         <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"{{departureId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "05- GET ALL IE015 → IE928 →IE028→IE013-> IE004->IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/644a2f53c675ebdf/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"644a2f53c675ebdf",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "10 - Normal Departure with Cancellation before release for transit",
					"item": [
						{
							"name": "01- POST IE015 Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"var LRN=\"TRATESTGB10\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"console.log (\"Text value is \"+LRN)",
											"console.log (\"limitDate is \"+limitDate)",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"now\", moment().format(\"YYYY-MM-DD hh:mm:ss\"));",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/6499a313a393bf3b/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"6499a313a393bf3b",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- POST IE014",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"",
											"var LRN=\"TRATEST10\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
											"//depId = depId.split(\"/\")[5]",
											"pm.environment.set(\"messageId\",messageId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246MOQRAWJ2</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures/65250b2c0df641f1/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"65250b2c0df641f1",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "04- GET ALL IE015 → IE928 →IE028→IE014→ IE009",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"{{departureId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "12 - Normal Departure with Cancellation after release for transit",
					"item": [
						{
							"name": "01- POST IE015 Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"let LRN=\"TRATESTGB12\";",
											"let charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"{{departureId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- POST IE014",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('3', 'days');",
											"",
											"var LRN=\"TRATEST9\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"now\", moment().format(\"YYYY-MM-DD hh:mm:ss\"));",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
											"//depId = depId.split(\"/\")[5]",
											"pm.environment.set(\"messageId\",messageId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{IntConRefMES11}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23GB0002464M0YC3J0</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures/64621129880c9797/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64621129880c9797",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "04- GET ALL IE015 → IE928 →IE028→IE029 -> IE014→ IE056",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"{{departureId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "13A - Cancellation of a transit declaration after release for transit by OoDep",
					"item": [
						{
							"name": "01- POST IE015 Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"let LRN=\"TRATESTGB13\";",
											"let charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64a551b99c59753a/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64a551b99c59753a",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 → IE928 →IE028→IE029→ IE009",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"{{departureId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "15 - Normal Departure with Control by office of departure satisfactory",
					"item": [
						{
							"name": "01- POST IE015 Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"let LRN=\"TRATESTGB15\";",
											"let charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET ALL IE015 → IE928 →IE028→ IE060→ IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64621758fecdc9c6/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64621758fecdc9c6",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "17 - Normal Departure with Control by office of departure unsatisfactory",
					"item": [
						{
							"name": "01- POST IE015 Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"let LRN=\"TRATESTGB17\";",
											"let charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET ALL IE015 → IE928 →IE028→ IE060→ IE051",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64a567dcf8f2db02/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64a567dcf8f2db02",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "20 - Normal Departure with Multiple house consignor to multiple consignee",
					"item": [
						{
							"name": "01- POST IE015 Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('14', 'days');",
											"",
											"let limitDate = now.format(\"YYYY-MM-DD\")",
											"",
											"let arrivalTime = moment();",
											"arrivalTime.add('14', 'days');",
											"",
											"let LRN=\"TRATESTGB20\";",
											"let charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"LRN += charset;",
											"",
											"pm.collectionVariables.set(\"LRN\", LRN);",
											"pm.collectionVariables.set(\"limitDate\", limitDate);",
											"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
											"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
											"pm.environment.set(\"departureId\",departureId);",
											"",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.2.0+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1022.000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000</grossMass>\n            <Consignor>\n                <identificationNumber>GB953574106000</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000</grossMass>\n                        <netMass>950.000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n        <HouseConsignment>\n            <sequenceNumber>2</sequenceNumber>\n            <grossMass>22.000000</grossMass>\n            <Consignor>\n                <identificationNumber>XI175521246821</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Daffodils</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>871200</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>22.000000</grossMass>\n                        <netMass>20.000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 → IE928 →IE028→ IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.2.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/movements/departures/64a5687880436e70/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"movements",
										"departures",
										"64a5687880436e70",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Pre-lodgement",
			"item": [
				{
					"name": "Simplified",
					"item": [
						{
							"name": "21 - Simplified Pre-lodged Declaration Single house consignment to single consignee",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTGB21\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>test goods</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE170 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTGB21\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"pm.environment.set(\"messageId\",messageId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB212307121136</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928→ IE170 →IE028→ IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64a52b9895c0de55/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64a52b9895c0de55",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "25 - Simplified Pre-lodged Declaration Transit presentation not valid/rejected",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTGB25\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>test goods</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - POST IE170 No Auth No",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATEST25\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN></LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB E20 100</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928→ IE170 →IE056",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64a529c8974df24a/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64a529c8974df24a",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "27 - Simplified Pre-lodged Declaration with Amendments with Data",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTGB27\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>test goods</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64c906df943cbae0/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64c906df943cbae0",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE013",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATEST27\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC013C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB272308011421</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n  <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>test goods</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928→ IE013 → IE004",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06- POST IE170 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTGB27\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB272308011421</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07 - GET ALL IE015 → IE928→ IE013 → IE004 → IE170 → IE028 → IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "29 - Simplified Pre-lodged Declaration Positive with Cancellation",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTGB29\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>test goods</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64a5451ca5b6b26c/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64a5451ca5b6b26c",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - POST IE014",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB292307051125</LRN>\n    </TransitOperation>\n   <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container is broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - GET ALL IE015 → IE928 →  IE014 → IE009",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64a5451ca5b6b26c/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64a5451ca5b6b26c",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "Normal",
					"item": [
						{
							"name": "22 - Normal Pre-lodged Declaration Single house consignment to single consignee",
							"item": [
								{
									"name": "01- POST IE015 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTGB22\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE170 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTGB22\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB222307051136</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928→ IE170 →IE028→ IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64a547cb1bb2a574/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64a547cb1bb2a574",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "26 - Normal Pre-lodged Declaration Transit presentation not valid/rejected Data",
							"item": [
								{
									"name": "01- POST IE015 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTGB26\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - POST IE170 Normal Incorrect UNLocode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATEST26\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB262307050928</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GB123</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928→ IE170 →IE056",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64a529c8974df24a/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64a529c8974df24a",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "28 - Normal Pre-lodged Declaration with Amendments",
							"item": [
								{
									"name": "01- POST IE015 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTGB28\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages/64c9063f2769419f",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages",
												"64c9063f2769419f"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE013",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATEST28\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC013C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB282308011417</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928→ IE013 → IE004",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06- POST IE170 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATEST28\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB282310100944</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07 - GET ALL IE015 → IE928→ IE013 → IE004 → IE170 → IE028 → IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64a539e0747be543/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64a539e0747be543",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "30 - Normal Pre-lodged Declaration Positive with Cancellation",
							"item": [
								{
									"name": "01- POST IE015 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTGB30\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64a546505cb6cd56/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64a546505cb6cd56",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64a546bdc89b597e/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64a546bdc89b597e",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - POST IE014 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTGB302307051130</LRN>\n    </TransitOperation>\n     <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container is broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - GET ALL IE015 → IE928 →  IE014 → IE009",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64a546bdc89b597e/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64a546bdc89b597e",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Arrivals",
			"item": [
				{
					"name": "Simplified",
					"item": [
						{
							"name": "32 - Simplified arrivals",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64c8dce9b853bcf7/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64c8dce9b853bcf7",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64c8dce9b853bcf7/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64c8dce9b853bcf7",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST IE007 must return status code 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var arrivalId = jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"arrivalId\", arrivalId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081FXMK3GJ6</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>GBAUTHDES01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE007 -> IE043",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/64c8dd346d6bc948/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64c8dd346d6bc948",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE007 -> IE043 Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/64c8dd346d6bc948/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64c8dd346d6bc948",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06- IE044 (Unloading Remarks)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let moment = require('moment')",
													"let today = moment();",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													"",
													"pm.collectionVariables.set(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true,
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>1</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081CTJX2YJ6</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/652513dd2571a100/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"652513dd2571a100",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07- GET ALL IE007 →IE043→  IE044 → IE025 → IE045",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "ASGB5 Nipuls Non Conformance Simplified",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>10000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>2000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>2000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n            <ConsignmentItem>\n                <goodsItemNumber>2</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>100119</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>wheat</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/6526700a5d17bc36/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"6526700a5d17bc36",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST IE007 must return status code 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var arrivalId = jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"arrivalId\", arrivalId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081IMDHRDJ0</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>GBAUTHDES01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE007 -> IE043",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/6526705f9e73f7bc/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"6526705f9e73f7bc",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06- IE044 (Unloading Remarks)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let moment = require('moment')",
													"let today = moment();",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													"",
													"pm.collectionVariables.set(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true,
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>1</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081IMDHRDJ0</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>0</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n    <Consignment>\n        <grossMass>2750.000</grossMass>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>2750.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Barley</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>950691</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>750.000</grossMass>\n                        <netMass>750.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <numberOfPackages>1</numberOfPackages>\n                </Packaging>\n            </ConsignmentItem>\n            <ConsignmentItem>\n                <goodsItemNumber>2</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <GoodsMeasure>\n                        <grossMass>2000.000</grossMass>\n                        <netMass>2000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC044C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07- GET ALL IE007 →IE043→  IE044 → IE025 → IE045",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "33 - Simplified arrivals Unloading remarks accepted/rejected",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastics</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Plastic Boxes</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var loc = postman.getResponseHeader(\"Location\").toString();",
													"",
													"var arrivalId = loc.split(\"/\")[5];",
													"pm.environment.set(\"arrivalId\",arrivalId);",
													"",
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081BE4VRFJ5</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>GBAUTHDES01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007 Simplified Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var loc = postman.getResponseHeader(\"Location\").toString();",
													"",
													"var arrivalId = loc.split(\"/\")[5];",
													"pm.environment.set(\"arrivalId\",arrivalId);",
													"",
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246CXFBNDJ0</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>GBAUTHDES01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <Incident>\n            <sequenceNumber>1</sequenceNumber>\n            <code>1</code>\n            <text>Movement had to deviate</text>\n            <Location>\n                <qualifierOfIdentification>U</qualifierOfIdentification>\n                <UNLocode>GBBEL</UNLocode>\n                <country>XI</country>\n            </Location>\n        </Incident>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "07- GET IE007 →IE043",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/64d23df0d6ff0985/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64d23df0d6ff0985",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06-IE044 (Unloading Remarks) - No stateOfSeals",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Validate location\", function () {",
													"    var arr_location = postman.getResponseHeader(\"Location\").toString();",
													"});",
													"",
													"var loc = postman.getResponseHeader(\"Location\").toString();",
													"tests[loc] = loc;",
													"var messageId = loc.split(\"/\")[7];",
													"pm.environment.set(\"messageId\",messageId);",
													"console.log(\"message id is \"+messageId)",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let moment = require('moment')",
													"let today = moment();",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													"",
													"pm.collectionVariables.set(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true,
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081BE4VRFJ5</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n    </UnloadingRemark>\n</ncts:CC044C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/64d23df0d6ff0985/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64d23df0d6ff0985",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06-IE044 (Unloading Remarks) - Diff Seals",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Validate location\", function () {",
													"    var arr_location = postman.getResponseHeader(\"Location\").toString();",
													"});",
													"",
													"var loc = postman.getResponseHeader(\"Location\").toString();",
													"tests[loc] = loc;",
													"var messageId = loc.split(\"/\")[7];",
													"pm.environment.set(\"messageId\",messageId);",
													"console.log(\"message id is \"+messageId)",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let moment = require('moment')",
													"let today = moment();",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													"",
													"pm.collectionVariables.set(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true,
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081BE4VRFJ5</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>1</stateOfSeals>\n    </UnloadingRemark>\n    <Consignment>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1255</identifier>\n            </Seal>\n        </TransportEquipment>\n    </Consignment>\n    </ncts:CC044C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/64d23df0d6ff0985/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64d23df0d6ff0985",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07- GET IE007 →IE043→  IE044→ IE057",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/64d23df0d6ff0985/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64d23df0d6ff0985",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06- Valid IE044 (Unloading Remarks)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Validate location\", function () {",
													"    var arr_location = postman.getResponseHeader(\"Location\").toString();",
													"});",
													"",
													"var loc = postman.getResponseHeader(\"Location\").toString();",
													"tests[loc] = loc;",
													"var messageId = loc.split(\"/\")[7];",
													"pm.environment.set(\"messageId\",messageId);",
													"console.log(\"message id is \"+messageId)",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let moment = require('moment')",
													"let today = moment();",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													"",
													"pm.collectionVariables.set(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true,
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081JYRJUVJ9</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/64c8de170ac4e3e2/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64c8de170ac4e3e2",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "09- GET messages IE007 →IE043→  IE044→ IE057 → IE044 → IE025",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "34 - Simplified Departure with Cancellation of a transit declaration after release for transit by OoDep Copy",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTGB13\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET ALL IE015 → IE928 →IE028→IE029→ IE009",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64945ca10ea4da4f/messages/64945d987d7f8fd3",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64945ca10ea4da4f",
												"messages",
												"64945d987d7f8fd3"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- POST IE007 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST IE007 must return status code 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var arrivalId = jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"arrivalId\", arrivalId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB000060KNEJKEJ3</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>GBAUTHDES01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE007 -> IE057",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/64ca3576742c99b3/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64ca3576742c99b3",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "36 - Simplified Departure with Major discrepancies resolved",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATEST32\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastics</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Plastic Boxes</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028→IE029→ IE019 → IE045",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var arrivalId =  jsonData._links.self.href.split(\"/\")[5]",
													"",
													"pm.environment.set(\"arrivalId\",arrivalId);",
													"",
													"",
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081GESREDJ6</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>GBAUTHDES01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE007 -> IE043",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/64c90f3434d6a865/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64c90f3434d6a865",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06- VALID IE044 (Unloading Remarks)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let moment = require('moment')",
													"let today = moment();",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													"",
													"pm.collectionVariables.set(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true,
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081GESREDJ6</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/64ca27c036ed0099/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64ca27c036ed0099",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07- GET IE007 -> IE043 -> IE044 ->IE025 → IE025",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "36A - Simplified Departure Major discrepancies confirmed",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATEST32\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastics</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Plastic Boxes</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029->IE019->IE035",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64c8f0bedb2f5b5f/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64c8f0bedb2f5b5f",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment')",
													"",
													"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
													"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
													"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))",
													"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var arrivalId =  jsonData._links.self.href.split(\"/\")[4]",
													"",
													"pm.environment.set(\"arrivalId\",arrivalId);",
													"",
													"",
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n  <messageSender>9999912345</messageSender>\n  <messageRecipient>NTA.GB</messageRecipient>\n  <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n  <messageIdentification>{{messageIdentification}}</messageIdentification>\n  <messageType>CC007C</messageType>\n  <TransitOperation>\n    <MRN>23GB000060NV5YRTJ2</MRN>\n    <arrivalNotificationDateAndTime>{{arrivalTime}}</arrivalNotificationDateAndTime>\n    <simplifiedProcedure>1</simplifiedProcedure>\n    <incidentFlag>0</incidentFlag>\n  </TransitOperation>\n  <Authorisation>\n    <sequenceNumber>1</sequenceNumber>\n    <type>C522</type>\n    <referenceNumber>GBAUTHDES01</referenceNumber>\n  </Authorisation>\n  <CustomsOfficeOfDestinationActual>\n    <referenceNumber>GB000246</referenceNumber>\n  </CustomsOfficeOfDestinationActual>\n  <TraderAtDestination>\n    <identificationNumber>GB953574106000</identificationNumber>\n  </TraderAtDestination>\n  <Consignment>\n    <LocationOfGoods>\n      <typeOfLocation>B</typeOfLocation>\n      <qualifierOfIdentification>Y</qualifierOfIdentification>\n      <authorisationNumber>GB DES E20 1HZ</authorisationNumber>\n    </LocationOfGoods>\n  </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE007 -> IE043",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/64c910c75b2408ee/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64c910c75b2408ee",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06- VALID IE044 (Unloading Remarks)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment')",
													"let yesterday = moment();",
													"yesterday.subtract(1, 'days');",
													"",
													"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
													"",
													"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
													"pm.collectionVariables.set(\"UnlDatREM67\", yesterday.format(\"YYYY-MM-DD\"))",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true,
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB000060NV5YRTJ2</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/64c910c75b2408ee/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64c910c75b2408ee",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07- GET IE007 -> IE043 -> IE044 ->IE025",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "Normal",
					"item": [
						{
							"name": "31 - Normal arrivals",
							"item": [
								{
									"name": "01- POST IE015",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/movements/departures",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/departures/64c8dbf0b4b4196c/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"departures",
												"64c8dbf0b4b4196c",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007 Normal GB Arrivals",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST IE007 must return status code 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var arrivalId = jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"arrivalId\", arrivalId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081WJZ6YJJ8</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>0</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseURL}}/movements/arrivals",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE007 -> IE025 -> IE045",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/movements/arrivals/64c8dc8250686e5d/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64c8dc8250686e5d",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "LRN",
			"value": ""
		},
		{
			"key": "limitDate",
			"value": ""
		},
		{
			"key": "preparationDateAndTime",
			"value": ""
		},
		{
			"key": "arrivalTime",
			"value": ""
		},
		{
			"key": "messageIdentification",
			"value": ""
		},
		{
			"key": "IntConRefMES11",
			"value": ""
		},
		{
			"key": "now",
			"value": ""
		},
		{
			"key": "requestDateAndTime",
			"value": ""
		},
		{
			"key": "decisionDateAndTime",
			"value": ""
		},
		{
			"key": "arrivalNotificationDateAndTime",
			"value": ""
		},
		{
			"key": "unloadingDate",
			"value": ""
		},
		{
			"key": "DatOfPreMES9",
			"value": ""
		},
		{
			"key": "TimOfPreMES10",
			"value": ""
		},
		{
			"key": "ArrNotDatHEA141",
			"value": ""
		},
		{
			"key": "UnlDatREM67",
			"value": ""
		}
	]
}