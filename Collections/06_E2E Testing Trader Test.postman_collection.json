{
	"info": {
		"_postman_id": "932065df-4d17-44ef-b7ec-54b9a9a97f85",
		"name": "09a_E2E Testing - Trader Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "E2E Testing - TT",
			"item": [
				{
					"name": "1.1 DECLARATION 1 â€“ Safety and Security; Simplified Departure with Missing Place of Loading Code",
					"item": [
						{
							"name": "01- POST IE015 Simplified Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC1\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AutLocOfGooCodHEA41>954131533-GB60DEP</AutLocOfGooCodHEA41>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <TraModAtBorHEA76>3</TraModAtBorHEA76>\n        <IdeOfMeaOfTraCroHEA85>NC15REG</IdeOfMeaOfTraCroHEA85>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <SpeCirIndHEA1>C</SpeCirIndHEA1>\n        <ComRefNumHEA>HQDOV001</ComRefNumHEA>\n        <SecHEA358>1</SecHEA358>\n        <CodPlUnHEA357>MONOPOLI001</CodPlUnHEA357>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TRACONCO1LNG>EN</TRACONCO1LNG>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>NCTS UK TEST LAB HMCE</NamCE17>\n        <StrAndNumCE122>ITALIAN OFFICE</StrAndNumCE122>\n        <PosCodCE123>IT99 1IT</PosCodCE123>\n        <CitCE124>MILAN</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT11ITALIANC11</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <CONRESERS>\n         <ConResCodERS16>A3</ConResCodERS16>\n         <DatLimERS69>{{DatLimERS69}}</DatLimERS69>\n    </CONRESERS>\n    <SEAINFSLI>\n        <SeaNumSLI2>1</SeaNumSLI2>\n        <SEAIDSID>\n            <SeaIdeSID1>NCTS001</SeaIdeSID1>\n        </SEAIDSID>\n    </SEAINFSLI>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n    <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n        <TRACORSECGOO021>\n            <TINTRACORSECGOO028>GB954131533000</TINTRACORSECGOO028>\n        </TRACORSECGOO021>\n        <TRACONSECGOO013>\n            <TINTRACONSECGOO020>IT17THEBOSS42</TINTRACONSECGOO020>\n        </TRACONSECGOO013>\n    </GOOITEGDS>\n    <ITI>\n        <CouOfRouCodITI1>GB</CouOfRouCodITI1>\n    </ITI>\n    <ITI>\n        <CouOfRouCodITI1>FR</CouOfRouCodITI1>\n    </ITI>\n        <ITI>\n        <CouOfRouCodITI1>IT</CouOfRouCodITI1>\n    </ITI>\n    <CARTRA100>\n        <TINCARTRA254>GB954131533000</TINCARTRA254>\n    </CARTRA100>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 > IE016",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.2 DECLARATION 2 â€“ Normal Declaration with Cancellation Request",
					"item": [
						{
							"name": "01- POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC2\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <IdeOfMeaOfTraAtDHEA78LNG>EN</IdeOfMeaOfTraAtDHEA78LNG>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n   </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <NADLNGPC>EN</NADLNGPC>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TRACONCO1LNG>EN</TRACONCO1LNG>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>Corleone</NamCE17>\n        <StrAndNumCE122>23, Le Don str</StrAndNumCE122>\n        <PosCodCE123>123-456</PosCodCE123>\n        <CitCE124>Corleone</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT17THEBOSS42</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>08GB00000100005N0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>5000.00GBP08GB00000100005N0</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 > IE928 > IE028",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "04- POST IE014",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC11\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DatOfCanReqHEA147\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var msgId = loc.split(\"/\")[7];",
											"pm.environment.set(\"msgId\",msgId);",
											"",
											"pm.test(\"POST IE014 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC014A>\n<SynIdeMES1>UNOC</SynIdeMES1>\n<SynVerNumMES2>3</SynVerNumMES2>\n<MesRecMES6>NCTS</MesRecMES6>\n<DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n<TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n<IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n<AppRefMES14>NCTS</AppRefMES14>\n<MesIdeMES19>1</MesIdeMES19>\n<MesTypMES20>GB014A</MesTypMES20>\n<HEAHEA>\n<DocNumHEA5></DocNumHEA5>\n<DatOfCanReqHEA147>{{DatOfCanReqHEA147}}</DatOfCanReqHEA147>\n<CanReaHEA250>Duplicate Entry</CanReaHEA250>\n</HEAHEA>\n<TRAPRIPC1>\n<NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n<StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n<PosCodPC123>SS99 1AA</PosCodPC123>\n<CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n<CouPC125>GB</CouPC125>\n<NADLNGPC>EN</NADLNGPC>\n<TINPC159>GB954131533000</TINPC159>\n</TRAPRIPC1>\n<CUSOFFDEPEPT>\n<RefNumEPT1>GB000060</RefNumEPT1>\n</CUSOFFDEPEPT>\n</CC014A>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "05- GET ALL IE014 > IE009",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.3 DECLARATION 3 â€“ Normal Declaration - Released for Transit",
					"item": [
						{
							"name": "01- POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC3\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraAtDHEA80>GB</NatOfMeaOfTraAtDHEA80>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <NADLNGPC>EN</NADLNGPC>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TRACONCO1LNG>EN</TRACONCO1LNG>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>Corleone</NamCE17>\n        <StrAndNumCE122>23, Le Don str</StrAndNumCE122>\n        <PosCodCE123>123-456</PosCodCE123>\n        <CitCE124>Corleone</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT17THEBOSS42</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n    <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Tea</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>5000.00GBP09GB00000100000M0</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <MarNumOfPacGS21LNG>EN</MarNumOfPacGS21LNG>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 > IE928 > IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.4 DECLARATION 4 â€“ Normal Declaration with Customs Sub Place",
					"item": [
						{
							"name": "01- POST IE015 Nornal Declaration",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC4\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <CusSubPlaHEA66>DOVER ERTS</CusSubPlaHEA66>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraAtDHEA80>GB</NatOfMeaOfTraAtDHEA80>\n   \n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TRACONCO1LNG>EN</TRACONCO1LNG>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>Corleone</NamCE17>\n        <StrAndNumCE122>23, Le Don str</StrAndNumCE122>\n        <PosCodCE123>123-456</PosCodCE123>\n        <CitCE124>Corleone</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT27THEBOSS42</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n    <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Tea</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>5000.00GBP09GB00000100000M0</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <MarNumOfPacGS21LNG>EN</MarNumOfPacGS21LNG>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 > IE928> IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.5 DECLARATION 5 â€“ Simplified Departure - Authorised Consignor",
					"item": [
						{
							"name": "01- POST IE015 Simplified Journey",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC5\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AutLocOfGooCodHEA41>954131533-GB60DEP</AutLocOfGooCodHEA41>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraAtDHEA80>GB</NatOfMeaOfTraAtDHEA80>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <NADLNGPC>EN</NADLNGPC>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TRACONCO1LNG>EN</TRACONCO1LNG>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>NCTS UK TEST LAB HMCE</NamCE17>\n        <StrAndNumCE122>ITALIAN OFFICE</StrAndNumCE122>\n        <PosCodCE123>IT99 1IT</PosCodCE123>\n        <CitCE124>MILAN</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT11ITALIANC11</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <CONRESERS>\n         <ConResCodERS16>A3</ConResCodERS16>\n         <DatLimERS69>{{DatLimERS69}}</DatLimERS69>\n    </CONRESERS>\n    <SEAINFSLI>\n        <SeaNumSLI2>1</SeaNumSLI2>\n        <SEAIDSID>\n            <SeaIdeSID1>NCTS001</SeaIdeSID1>\n        </SEAIDSID>\n    </SEAINFSLI>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>5000.00GBP09GB00000100000M0</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n         <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 > IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.6 DECLARATION 6 â€“ Safety & Security; Normal Declaration",
					"item": [
						{
							"name": "01- POST IE015 Normal Declaration",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRADEC6\";",
											"var charset = moment().format(\"YYMMDDHHmmss\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <MesIdeMES19>13633</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <PlaOfLoaCodHEA46>DOVER007</PlaOfLoaCodHEA46>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <TraModAtBorHEA76>3</TraModAtBorHEA76>\n        <IdeOfMeaOfTraCroHEA85>NC15 REG</IdeOfMeaOfTraCroHEA85>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n        <SpeCirIndHEA1>C</SpeCirIndHEA1>\n        <ComRefNumHEA>HQDOV007</ComRefNumHEA>\n        <SecHEA358>1</SecHEA358>\n        <CodPlUnHEA357>MONOPOLI007</CodPlUnHEA357>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>Corleone</NamCE17>\n        <StrAndNumCE122>23, Le Don str</StrAndNumCE122>\n        <PosCodCE123>123-456</PosCodCE123>\n        <CitCE124>Corleone</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT27THEBOSS42</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>5000.00GBP09GB00000100000M0</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <MarNumOfPacGS21LNG>EN</MarNumOfPacGS21LNG>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n    <ITI>\n        <CouOfRouCodITI1>GB</CouOfRouCodITI1>\n    </ITI>\n    <ITI>\n        <CouOfRouCodITI1>FR</CouOfRouCodITI1>\n    </ITI>\n    <ITI>\n        <CouOfRouCodITI1>IT</CouOfRouCodITI1>\n    </ITI>\n    <CARTRA100>\n     <TINCARTRA254>GB954131533000</TINCARTRA254>\n    </CARTRA100>\n    <TRACORSEC037>\n        <TINTRACORSEC044>GB954131533000</TINTRACORSEC044>\n    </TRACORSEC037>\n    <TRACONSEC029>\n        <TINTRACONSEC036>IT17THEBOSS42</TINTRACONSEC036>\n    </TRACONSEC029>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "01- POST IE015 Normal Declaration TT data",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TESTDEC6\";",
											"var charset = moment().format(\"YYMMDDHHmmss\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <MesIdeMES19>13633</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <PlaOfLoaCodHEA46>DOVER007</PlaOfLoaCodHEA46>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <TraModAtBorHEA76>3</TraModAtBorHEA76>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraAtDHEA80>GB</NatOfMeaOfTraAtDHEA80>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n        <SpeCirIndHEA1>B</SpeCirIndHEA1>\n        <ComRefNumHEA>HQDOV007</ComRefNumHEA>\n        <SecHEA358>1</SecHEA358>\n        <CodPlUnHEA357>MONOPOLI007</CodPlUnHEA357>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>Corleone</NamCE17>\n        <StrAndNumCE122>23, Le Don str</StrAndNumCE122>\n        <PosCodCE123>123-456</PosCodCE123>\n        <CitCE124>Corleone</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT27THEBOSS42</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>5000.00GBP09GB00000100000M0</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <MarNumOfPacGS21LNG>EN</MarNumOfPacGS21LNG>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n    <ITI>\n        <CouOfRouCodITI1>GB</CouOfRouCodITI1>\n    </ITI>\n    <ITI>\n        <CouOfRouCodITI1>FR</CouOfRouCodITI1>\n    </ITI>\n    <ITI>\n        <CouOfRouCodITI1>IT</CouOfRouCodITI1>\n    </ITI>\n    <CARTRA100>\n     <TINCARTRA254>GB954131533000</TINCARTRA254>\n    </CARTRA100>\n    <TRACORSEC037>\n        <TINTRACORSEC044>GB954131533000</TINTRACORSEC044>\n    </TRACORSEC037>\n    <TRACONSEC029>\n        <TINTRACONSEC036>IT17THEBOSS42</TINTRACONSEC036>\n    </TRACONSEC029>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 >IE928 >IE028 >IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "Need to change the \"Nationality of means of transport\" and 'Identity of Means of Transport at Departure' at departure to \"Nationality of means of transport crossing border\" and \"Identity of means of transport crossing border\" and \"Specific Circumstance Indicator\" to C to the xml message working.\n\nElse its rejected with below details -\n\n<CC016A>\n    <SynIdeMES1>UNOC</SynIdeMES1>\\n\n    <SynVerNumMES2>3</SynVerNumMES2>\\n\n    <MesSenMES3>NTA.GB</MesSenMES3>\\n\n    <MesRecMES6>MDTP-000000000000000000000000496-01</MesRecMES6>\\n\n    <DatOfPreMES9>20210205</DatOfPreMES9>\\n\n    <TimOfPreMES10>1453</TimOfPreMES10>\\n\n    <IntConRefMES11>83410205145356</IntConRefMES11>\\n\n    <TesIndMES18>0</TesIndMES18>\\n\n    <MesIdeMES19>83410205145356</MesIdeMES19>\\n\n    <MesTypMES20>GB016A</MesTypMES20>\\n\n    <HEAHEA>\n        <RefNumHEA4>TESTDEC6210205145352</RefNumHEA4>\\n\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\\n\n        <DecRejDatHEA159>20210205</DecRejDatHEA159>\\n\n        <DecRejReaHEA252>The IE015 message received was invalid</DecRejReaHEA252>\\n\n    </HEAHEA>\\n\n    <FUNERRER1>\n        <ErrTypER11>15</ErrTypER11>\\n\n        <ErrPoiER12>HEA.Nationality of means of transport crossing border</ErrPoiER12>\\n\n        <ErrReaER13>C010</ErrReaER13>\\n\n    </FUNERRER1>\\n\n    <FUNERRER1>\n        <ErrTypER11>12</ErrTypER11>\\n\n        <ErrPoiER12>HEA.Specific Circumstance Indicator</ErrPoiER12>\\n\n        <OriAttValER14>B</OriAttValER14>\\n\n    </FUNERRER1>\\n\n</CC016A>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.7 - DECLARATION 7 â€“ Italy to GB; Normal Arrival with Rejection Notification",
					"item": [
						{
							"name": "01- POST IE015 Simplified",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TESTDEC7\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " <CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AutLocOfGooCodHEA41>954131533-GB60DEP</AutLocOfGooCodHEA41>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraAtDHEA80>GB</NatOfMeaOfTraAtDHEA80>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <NADLNGPC>EN</NADLNGPC>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>NCTS UK TEST LAB HMCE</NamCE17>\n        <StrAndNumCE122>ITALIAN OFFICE</StrAndNumCE122>\n        <PosCodCE123>IT99 1IT</PosCodCE123>\n        <CitCE124>MILAN</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT11ITALIANC11</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018100</RefNumEST1>\n    </CUSOFFDESEST>\n    <CONRESERS>\n         <ConResCodERS16>A3</ConResCodERS16>\n         <DatLimERS69>{{DatLimERS69}}</DatLimERS69>\n    </CONRESERS>\n    <SEAINFSLI>\n        <SeaNumSLI2>1</SeaNumSLI2>\n        <SEAIDSID>\n            <SeaIdeSID1>NCTS001</SeaIdeSID1>\n        </SEAIDSID>\n    </SEAINFSLI>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>20GB0000010000GX1</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>5000.00GBP20GB0000010000GX1</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n         <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"MRN not null\", function () {",
											"    var jsonData = pm.response.json();",
											"    console.log(jsonData.movementReferenceNumber);",
											"    pm.environment.set(\"MRN\",jsonData.movementReferenceNumber);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 > IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/219/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"219",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "04- POST IE007 Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))",
											"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"",
											"var arrivalId = loc.split(\"/\")[5];",
											"pm.environment.set(\"arrivalId\",arrivalId);",
											"",
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC007A>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <TesIndMES18>0</TesIndMES18>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB007A</MesTypMES20>\n    <HEAHEA>        \n        <DocNumHEA5>{{MRN}}</DocNumHEA5>\n        <CusSubPlaHEA66>INVALID PLACE</CusSubPlaHEA66>\n        <ArrNotPlaHEA60>DOVER</ArrNotPlaHEA60>\n        <ArrNotPlaHEA60LNG>EN</ArrNotPlaHEA60LNG>\n        <SimProFlaHEA132>0</SimProFlaHEA132>\n        <ArrNotDatHEA141>{{ArrNotDatHEA141}}</ArrNotDatHEA141>\n    </HEAHEA>\n    <TRADESTRD>\n        <NamTRD7>NCTS UK TEST LAB HMCE</NamTRD7>\n        <StrAndNumTRD22>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumTRD22>\n        <PosCodTRD23>SS99 1AA</PosCodTRD23>\n        <CitTRD24>SOUTHEND-ON-SEA, ESSEX</CitTRD24>\n        <CouTRD25>GB</CouTRD25>\n        <NADLNGRD>EN</NADLNGRD>\n        <TINTRD59>GB954131533000</TINTRD59>\n    </TRADESTRD>\n    <CUSOFFPREOFFRES>\n        <RefNumRES1>GB000060</RefNumRES1>\n    </CUSOFFPREOFFRES>\n  </CC007A>"
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals"
									]
								}
							},
							"response": []
						},
						{
							"name": "05- GET IE007 arrival Id details > IE008",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all arrival must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "This journey has been modified to be from GB to IT and diverting back to GB",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.8 -DECLARATION 8 - Italy to GB - Simplified Arrival",
					"item": [
						{
							"name": "01- POST IE015 Simplified",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TESTDEC8\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " <CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AutLocOfGooCodHEA41>954131533-GB60DEP</AutLocOfGooCodHEA41>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraAtDHEA80>GB</NatOfMeaOfTraAtDHEA80>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <NADLNGPC>EN</NADLNGPC>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>NCTS UK TEST LAB HMCE</NamCE17>\n        <StrAndNumCE122>ITALIAN OFFICE</StrAndNumCE122>\n        <PosCodCE123>IT99 1IT</PosCodCE123>\n        <CitCE124>MILAN</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT11ITALIANC11</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018100</RefNumEST1>\n    </CUSOFFDESEST>\n    <CONRESERS>\n         <ConResCodERS16>A3</ConResCodERS16>\n         <DatLimERS69>{{DatLimERS69}}</DatLimERS69>\n    </CONRESERS>\n    <SEAINFSLI>\n        <SeaNumSLI2>1</SeaNumSLI2>\n        <SEAIDSID>\n            <SeaIdeSID1>NCTS001</SeaIdeSID1>\n        </SEAIDSID>\n    </SEAINFSLI>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>20GB0000010000GX1</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>20.22EUR20GB0000010000GX1</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n         <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"MRN not null\", function () {",
											"    var jsonData = pm.response.json();",
											"    console.log(jsonData.movementReferenceNumber);",
											"    pm.environment.set(\"MRN\",jsonData.movementReferenceNumber);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 > IE028 >IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "04- POST IE007 Simplified",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"",
											"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"",
											"var arrivalId = loc.split(\"/\")[5];",
											"pm.environment.set(\"arrivalId\",arrivalId);",
											"",
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC007A>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>AF2127776572</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <TesIndMES18>0</TesIndMES18>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB007A</MesTypMES20>\n    <HEAHEA>       \n        <DocNumHEA5>{{MRN}}</DocNumHEA5>\n        <ArrNotPlaHEA60>953574106-GB60DEP</ArrNotPlaHEA60>\n        <ArrNotPlaHEA60LNG>EN</ArrNotPlaHEA60LNG>\n        <SimProFlaHEA132>1</SimProFlaHEA132>\n        <ArrNotDatHEA141>{{ArrNotDatHEA141}}</ArrNotDatHEA141>\n    </HEAHEA>\n    <TRADESTRD>\n        <NamTRD7>NCTS TEST TRADER</NamTRD7>\n        <StrAndNumTRD22>C E HEATH HOUSE, VICTORIA</StrAndNumTRD22>\n        <PosCodTRD23>SS2 6DX</PosCodTRD23>\n        <CitTRD24>SOUTHEND-ON-SEA</CitTRD24>\n        <CouTRD25>GB</CouTRD25>\n        <NADLNGRD>EN</NADLNGRD>\n        <TINTRD59>GB954131533000</TINTRD59>\n    </TRADESTRD>\n    <CUSOFFPREOFFRES>    \n        <RefNumRES1>GB000060</RefNumRES1>\n    </CUSOFFPREOFFRES>\n    <ENROUEVETEV>        \n        <PlaTEV10>Rome</PlaTEV10>\n        <PlaTEV10LNG>EN</PlaTEV10LNG>\n        <CouTEV13>IT</CouTEV13>\n        <CTLCTL>\n            <AlrInNCTCTL29>1</AlrInNCTCTL29>\n        </CTLCTL>\n        <SEAINFSF1>            \n            <SeaNumSF12> 1 </SeaNumSF12>\n            <SEAIDSI1>        \n                <SeaIdeSI11>seal_1</SeaIdeSI11>\n                <SeaIdeSI11LNG>EN</SeaIdeSI11LNG>\n            </SEAIDSI1>\n        </SEAINFSF1>\n        <TRASHP>   \n            <NewTraMeaIdeSHP26>NewTestReg</NewTraMeaIdeSHP26>\n            <NewTraMeaIdeSHP26LNG>EN</NewTraMeaIdeSHP26LNG>\n            <NewTraMeaNatSHP54>IT</NewTraMeaNatSHP54>\n            <EndAutSHP61LNG> EN </EndAutSHP61LNG>\n            <EndPlaSHP63LNG> EN </EndPlaSHP63LNG>\n            <CONNR3>        \n                <ConNumNR31>cont1</ConNumNR31>\n            </CONNR3>\n        </TRASHP>\n    </ENROUEVETEV>\n</CC007A>\n   "
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals"
									]
								}
							},
							"response": []
						},
						{
							"name": "05- GET IE007 arrival Id details > IE043",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all arrival must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "06- IE044 (Unloading Remarks) ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"pm.test(\"Validate location\", function () {",
											"    var arr_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"",
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"tests[loc] = loc;",
											"var messageId = loc.split(\"/\")[7];",
											"pm.environment.set(\"messageId\",messageId);",
											"console.log(\"message id is \"+messageId)",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')",
											"let yesterday = moment();",
											"yesterday.subtract(1, 'days');",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"",
											"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
											"pm.collectionVariables.set(\"UnlDatREM67\", yesterday.format(\"YYYYMMDD\"))",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true,
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC044A>\n<SynIdeMES1>UNOC</SynIdeMES1>\n<SynVerNumMES2>3</SynVerNumMES2>\n\n<MesRecMES6>NCTS</MesRecMES6>\n<DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n<TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n<IntConRefMES11>GR125LL1765965</IntConRefMES11>\n<AppRefMES14>NCTS</AppRefMES14>\n<MesIdeMES19>GR125LL1765965</MesIdeMES19>\n<MesTypMES20>GB044A</MesTypMES20>\n<HEAHEA>\n<DocNumHEA5>{{MRN}}</DocNumHEA5>\n<IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n<TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n<TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n<TotGroMasHEA307>1000</TotGroMasHEA307>\n</HEAHEA>\n<TRADESTRD>\n<NamTRD7>NCTS TEST TRADER</NamTRD7>\n<StrAndNumTRD22>CE HEATH HOUSE, VICTORIA AV</StrAndNumTRD22>\n<PosCodTRD23>SS2 6DX</PosCodTRD23>\n<CitTRD24>SOUTHEND-ON-SEA, ESSEX</CitTRD24>\n<CouTRD25>GB</CouTRD25>\n<NADLNGRD>EN</NADLNGRD>\n<TINTRD59>GB954131533000</TINTRD59>\n</TRADESTRD>\n<CUSOFFPREOFFRES>\n<RefNumRES1>GB000060</RefNumRES1>\n</CUSOFFPREOFFRES>\n<UNLREMREM>\n<StaOfTheSeaOKREM19>1</StaOfTheSeaOKREM19>\n<ConREM65>1</ConREM65>\n<UnlComREM66>0</UnlComREM66>\n<UnlDatREM67>{{UnlDatREM67}}</UnlDatREM67>\n</UNLREMREM>\n<SEAINFSLI>\n<SeaNumSLI2>1</SeaNumSLI2>\n<SEAIDSID>\n<SeaIdeSID1>NCTS001</SeaIdeSID1>\n</SEAIDSID>\n</SEAINFSLI>\n</CC044A>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "07- GET messages > IE058",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "08- VALID IE044 (Unloading Remarks) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"pm.test(\"Validate location\", function () {",
											"    var arr_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"",
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"tests[loc] = loc;",
											"var messageId = loc.split(\"/\")[7];",
											"pm.environment.set(\"messageId\",messageId);",
											"console.log(\"message id is \"+messageId)",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')",
											"let yesterday = moment();",
											"yesterday.subtract(1, 'days');",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"",
											"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
											"pm.collectionVariables.set(\"UnlDatREM67\", moment().format(\"YYYYMMDD\"))",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true,
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC044A>\n<SynIdeMES1>UNOC</SynIdeMES1>\n<SynVerNumMES2>3</SynVerNumMES2>\n\n<MesRecMES6>NTA.GB</MesRecMES6>\n<DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n<TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n<IntConRefMES11>GR125LL1765965</IntConRefMES11>\n<AppRefMES14>NCTS</AppRefMES14>\n<MesIdeMES19>GR125LL1765965</MesIdeMES19>\n<MesTypMES20>GB044A</MesTypMES20>\n<HEAHEA>\n<DocNumHEA5>{{MRN}}</DocNumHEA5>\n<IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n<IdeOfMeaOfTraAtDHEA78LNG>EN</IdeOfMeaOfTraAtDHEA78LNG>\n<NatOfMeaOfTraAtDHEA80>IT</NatOfMeaOfTraAtDHEA80>\n<TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n<TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n<TotGroMasHEA307>1000</TotGroMasHEA307>\n</HEAHEA>\n<TRADESTRD>\n<NamTRD7>NCTS TEST TRADER</NamTRD7>\n<StrAndNumTRD22>CE HEATH HOUSE, VICTORIA AV</StrAndNumTRD22>\n<PosCodTRD23>SS2 6DX</PosCodTRD23>\n<CitTRD24>SOUTHEND-ON-SEA, ESSEX</CitTRD24>\n<CouTRD25>GB</CouTRD25>\n<NADLNGRD>EN</NADLNGRD>\n<TINTRD59>GB954131533000</TINTRD59>\n</TRADESTRD>\n<CUSOFFPREOFFRES>\n<RefNumRES1>GB000060</RefNumRES1>\n</CUSOFFPREOFFRES>\n<UNLREMREM>\n<StaOfTheSeaOKREM19>1</StaOfTheSeaOKREM19>\n<ConREM65>1</ConREM65>\n<UnlComREM66>1</UnlComREM66>\n<UnlDatREM67>{{UnlDatREM67}}</UnlDatREM67>\n</UNLREMREM>\n<SEAINFSLI>\n<SeaNumSLI2>1</SeaNumSLI2>\n<SEAIDSID>\n<SeaIdeSID1>NCTS001</SeaIdeSID1>\n</SEAIDSID>\n</SEAINFSLI>\n</CC044A>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "09- GET messages > IE025 > IE045",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.9 DECLARATION 9 - Simplified Declaration with Guarantee Not Valid",
					"item": [
						{
							"name": "01- POST IE015 Simplified",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC9\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AutLocOfGooCodHEA41>954131533-GB60DEP</AutLocOfGooCodHEA41>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraAtDHEA80>GB</NatOfMeaOfTraAtDHEA80>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>NCTS UK TEST LAB HMCE</NamCE17>\n        <StrAndNumCE122>ITALIAN OFFICE</StrAndNumCE122>\n        <PosCodCE123>IT99 1IT</PosCodCE123>\n        <CitCE124>MILAN</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT11ITALIANC11</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <CONRESERS>\n         <ConResCodERS16>A3</ConResCodERS16>\n         <DatLimERS69>{{DatLimERS69}}</DatLimERS69>\n    </CONRESERS>\n    <SEAINFSLI>\n        <SeaNumSLI2>1</SeaNumSLI2>\n        <SEAIDSID>\n            <SeaIdeSID1>NCTS001</SeaIdeSID1>\n        </SEAIDSID>\n    </SEAINFSLI>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>08GB00000100005N0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>5000.00GBP08GB00000100005N0</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"MRN not null\", function () {",
											"    var jsonData = pm.response.json();",
											"    console.log(jsonData.movementReferenceNumber);",
											"    pm.environment.set(\"MRN\",jsonData.movementReferenceNumber);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								},
								"description": " "
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 > IE028 >IE055",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "04- IE014 (Declaration Cancellation Request)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC11\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DatOfCanReqHEA147\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var msgId = loc.split(\"/\")[7];",
											"pm.environment.set(\"msgId\",msgId);",
											"",
											"pm.test(\"POST IE014 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC014A>\n<SynIdeMES1>UNOC</SynIdeMES1>\n<SynVerNumMES2>3</SynVerNumMES2>\n<MesRecMES6>NCTS</MesRecMES6>\n<DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n<TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n<IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n<AppRefMES14>NCTS</AppRefMES14>\n<TesIndMES18>0</TesIndMES18>\n<MesIdeMES19>1</MesIdeMES19>\n<MesTypMES20>GB014A</MesTypMES20>\n<HEAHEA>\n<DocNumHEA5>{{MRN}}</DocNumHEA5>\n<DatOfCanReqHEA147>{{DatOfCanReqHEA147}}</DatOfCanReqHEA147>\n<CanReaHEA250>Guarantee Does Not Exist</CanReaHEA250>\n</HEAHEA>\n<TRAPRIPC1>\n<NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n<StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n<PosCodPC123>SS99 1AA</PosCodPC123>\n<CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n<CouPC125>GB</CouPC125>\n<TINPC159>GB954131533000</TINPC159>\n</TRAPRIPC1>\n<CUSOFFDEPEPT>\n<RefNumEPT1>GB000060</RefNumEPT1>\n</CUSOFFDEPEPT>\n</CC014A>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "05- GET ALL IE014 > IE009",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.10 -DECLARATION 10 â€“ Italy to GB; Simplified Arrival, Non-Satisfactory Unloading Remarks",
					"item": [
						{
							"name": "01- POST IE015 Simplified Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TESTDEC8\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " <CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AutLocOfGooCodHEA41>954131533-GB60DEP</AutLocOfGooCodHEA41>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraAtDHEA80>GB</NatOfMeaOfTraAtDHEA80>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <NADLNGPC>EN</NADLNGPC>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>NCTS UK TEST LAB HMCE</NamCE17>\n        <StrAndNumCE122>ITALIAN OFFICE</StrAndNumCE122>\n        <PosCodCE123>IT99 1IT</PosCodCE123>\n        <CitCE124>MILAN</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT11ITALIANC11</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018100</RefNumEST1>\n    </CUSOFFDESEST>\n    <CONRESERS>\n         <ConResCodERS16>A3</ConResCodERS16>\n         <DatLimERS69>{{DatLimERS69}}</DatLimERS69>\n    </CONRESERS>\n    <SEAINFSLI>\n        <SeaNumSLI2>1</SeaNumSLI2>\n        <SEAIDSID>\n            <SeaIdeSID1>NCTS001</SeaIdeSID1>\n        </SEAIDSID>\n    </SEAINFSLI>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>20GB0000010000GX1</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>20.22EUR20GB0000010000GX1</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n         <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"MRN not null\", function () {",
											"    var jsonData = pm.response.json();",
											"    console.log(jsonData.movementReferenceNumber);",
											"    pm.environment.set(\"MRN\",jsonData.movementReferenceNumber);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 >IE028 >IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "04- POST IE007 Simplified",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"",
											"var arrivalId = loc.split(\"/\")[5];",
											"pm.environment.set(\"arrivalId\",arrivalId);",
											"",
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC007A>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>AF2027776572</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <TesIndMES18>0</TesIndMES18>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB007A</MesTypMES20>\n    <HEAHEA>       \n        <DocNumHEA5>{{MRN}}</DocNumHEA5>\n        <ArrNotPlaHEA60>953574106-GB60DEP</ArrNotPlaHEA60>\n        <ArrNotPlaHEA60LNG>EN</ArrNotPlaHEA60LNG>\n        <SimProFlaHEA132>1</SimProFlaHEA132>\n        <ArrNotDatHEA141>{{ArrNotDatHEA141}}</ArrNotDatHEA141>\n    </HEAHEA>\n    <TRADESTRD>\n        <NamTRD7>NCTS TEST TRADER</NamTRD7>\n        <StrAndNumTRD22>C E HEATH HOUSE, VICTORIA</StrAndNumTRD22>\n        <PosCodTRD23>SS2 6DX</PosCodTRD23>\n        <CitTRD24>SOUTHEND-ON-SEA</CitTRD24>\n        <CouTRD25>GB</CouTRD25>\n        <NADLNGRD>EN</NADLNGRD>\n        <TINTRD59>GB954133135000</TINTRD59>\n    </TRADESTRD>\n    <CUSOFFPREOFFRES>    \n        <RefNumRES1>GB000060</RefNumRES1>\n    </CUSOFFPREOFFRES>\n    <ENROUEVETEV>        \n        <PlaTEV10>Rome</PlaTEV10>\n        <PlaTEV10LNG>EN</PlaTEV10LNG>\n        <CouTEV13>IT</CouTEV13>\n        <CTLCTL>\n            <AlrInNCTCTL29>1</AlrInNCTCTL29>\n        </CTLCTL>\n        <SEAINFSF1>            \n            <SeaNumSF12> 1 </SeaNumSF12>\n            <SEAIDSI1>        \n                <SeaIdeSI11>seal_1</SeaIdeSI11>\n                <SeaIdeSI11LNG>EN</SeaIdeSI11LNG>\n            </SEAIDSI1>\n        </SEAINFSF1>\n        <TRASHP>   \n            <NewTraMeaIdeSHP26>NewTestReg</NewTraMeaIdeSHP26>\n            <NewTraMeaIdeSHP26LNG>EN</NewTraMeaIdeSHP26LNG>\n            <NewTraMeaNatSHP54>IT</NewTraMeaNatSHP54>\n            <EndAutSHP61LNG> EN </EndAutSHP61LNG>\n            <EndPlaSHP63LNG> EN </EndPlaSHP63LNG>\n            <CONNR3>        \n                <ConNumNR31>cont1</ConNumNR31>\n            </CONNR3>\n        </TRASHP>\n    </ENROUEVETEV>\n</CC007A>\n   "
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals"
									]
								}
							},
							"response": []
						},
						{
							"name": "05- GET IE007 arrival Id details > IE043",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all arrival must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "06- â€˜Non-Satisfactoryâ€™  VALID IE044 (Unloading Remarks)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"pm.test(\"Validate location\", function () {",
											"    var arr_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"",
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"tests[loc] = loc;",
											"var messageId = loc.split(\"/\")[7];",
											"pm.environment.set(\"messageId\",messageId);",
											"console.log(\"message id is \"+messageId)",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')",
											"let yesterday = moment();",
											"yesterday.subtract(1, 'days');",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"",
											"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC044A>\n   <SynIdeMES1>UNOC</SynIdeMES1>\n   <SynVerNumMES2>3</SynVerNumMES2>\n   <MesRecMES6>NCTS</MesRecMES6>\n   <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n   <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n   <IntConRefMES11>WE201015102567</IntConRefMES11>\n   <AppRefMES14>NCTS</AppRefMES14>\n   <TesIndMES18>0</TesIndMES18>\n   <MesIdeMES19>1</MesIdeMES19>\n   <MesTypMES20>GB044A</MesTypMES20>\n   <HEAHEA>\n      <DocNumHEA5>20GB00006010024748</DocNumHEA5>\n      <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n      <IdeOfMeaOfTraAtDHEA78LNG>EN</IdeOfMeaOfTraAtDHEA78LNG>\n      <NatOfMeaOfTraAtDHEA80>IT</NatOfMeaOfTraAtDHEA80>\n      <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n      <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n      <TotGroMasHEA307>1000</TotGroMasHEA307>\n   </HEAHEA>\n   <TRADESTRD>\n      <NamTRD7>NCTS TEST TRADER</NamTRD7>\n      <StrAndNumTRD22>CE HEATH HOUSE, VICTORIA AV</StrAndNumTRD22>\n      <CitTRD24>SOUTHEND-ON-SEA, ESSEX</CitTRD24>\n      <CouTRD25>GB</CouTRD25>\n      <NADLNGRD>EN</NADLNGRD>\n      <TINTRD59>GB954133135000</TINTRD59>\n   </TRADESTRD>\n   <CUSOFFPREOFFRES>\n      <RefNumRES1>GB000060</RefNumRES1>\n   </CUSOFFPREOFFRES>\n   <UNLREMREM>\n      <StaOfTheSeaOKREM19>1</StaOfTheSeaOKREM19>\n      <UnlRemREM53>HEADER PAGE Other things to report. Updated Total number of packages 6 to 8, Total gross mass kg 6 to 7, Identities of seals updated each and added 2 new seals.</UnlRemREM53>\n      <UnlRemREM53LNG>EN</UnlRemREM53LNG>\n      <ConREM65>1</ConREM65>\n      <UnlComREM66>1</UnlComREM66>\n      <UnlDatREM67>{{DatOfPreMES9}}</UnlDatREM67>\n   </UNLREMREM>\n   <GOOITEGDS>\n      <IteNumGDS7>1</IteNumGDS7>\n      <GooDesGDS23>Daffodils</GooDesGDS23>\n      <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n      <GroMasGDS46>1000</GroMasGDS46>\n      <NetMasGDS48>950</NetMasGDS48>\n      <PACGS2>\n         <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n         <MarNumOfPacGS21LNG>EN</MarNumOfPacGS21LNG>\n         <KinOfPacGS23>BX</KinOfPacGS23>\n         <NumOfPacGS24>1</NumOfPacGS24>\n      </PACGS2>\n   </GOOITEGDS>\n</CC044A>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "07- GET IE007 arrival Id details > IE043 > IE044",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all arrival must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "08- GET messages > IE025 > IE045",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "01a- POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC10\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>IT015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>GB</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <CouOfDisCodHEA55>IT</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>MONOPOLI</DecPlaHEA394>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>Corleone</NamPC17>\n        <StrAndNumPC122>23, Le Don str</StrAndNumPC122>\n        <PosCodPC123>123-456</PosCodPC123>\n        <CitPC124>Corleone</CitPC124>\n        <CouPC125>IT</CouPC125>\n        <TINPC159>IT27THEBOSS42</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>IT018105</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>GB000060</RefNumEST1>\n    </CUSOFFDESEST>\n  <GUAGUA>\n        <GuaTypGUA1>3</GuaTypGUA1>\n        <GUAREFREF>\n        <OthGuaRefREF4>Cash</OthGuaRefREF4>\n        </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Lilies</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>S99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>NCTS TEST TRADER</NamCE27>\n            <StrAndNumCE222>CE HEATH HOUSE, VICTORIA AV</StrAndNumCE222>\n            <PosCodCE223>SS2 6DX</PosCodCE223>\n            <CitCE224>SOUTHEND-ON-SEA, ESSEX</CitCE224>\n            <CouCE225>GB</CouCE225>\n            <TINCE259>GB954133135000</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.11 - DECLARATION 11 â€“ Simplified Declaration unable to determine duty â€“ no Guarantee Reference Amount",
					"item": [
						{
							"name": "01- IE015 Simplified IE015",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC11\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AutLocOfGooCodHEA41>954131533-GB60DEP</AutLocOfGooCodHEA41>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraAtDHEA80>GB</NatOfMeaOfTraAtDHEA80>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>NCTS UK TEST LAB HMCE</NamCE17>\n        <StrAndNumCE122>ITALIAN OFFICE</StrAndNumCE122>\n        <PosCodCE123>IT99 1IT</PosCodCE123>\n        <CitCE124>MILAN</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT11ITALIANC11</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018100</RefNumEST1>\n    </CUSOFFDESEST>\n    <CONRESERS>\n         <ConResCodERS16>A3</ConResCodERS16>\n         <DatLimERS69>{{DatLimERS69}}</DatLimERS69>\n    </CONRESERS>\n     <SEAINFSLI>\n        <SeaNumSLI2>1</SeaNumSLI2>\n        <SEAIDSID>\n            <SeaIdeSID1>NCTS001</SeaIdeSID1>\n        </SEAIDSID>\n    </SEAINFSLI>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n    <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Medicine</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>09GB00000100000M0</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 > IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "<CC029B><SynIdeMES1>UNOC</SynIdeMES1>\n<SynVerNumMES2>3</SynVerNumMES2>\n<MesSenMES3>NTA.GB</MesSenMES3>\n<MesRecMES6>MDTP-000000000000000000000000298-01</MesRecMES6>\n<DatOfPreMES9>20201109</DatOfPreMES9>\n<TimOfPreMES10>1658</TimOfPreMES10>\n<IntConRefMES11>76401109165846</IntConRefMES11>\n<AppRefMES14>NCTS</AppRefMES14>\n<TesIndMES18>0</TesIndMES18>\n<MesIdeMES19>76401109165846</MesIdeMES19>\n<MesTypMES20>GB029B</MesTypMES20>\n<HEAHEA><RefNumHEA4>TRATESTDEC112011091656</RefNumHEA4>\n<DocNumHEA5>20GB00006010024A29</DocNumHEA5>\n<TypOfDecHEA24>T1</TypOfDecHEA24>\n<CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n<CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n<IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n<NatOfMeaOfTraAtDHEA80>GB</NatOfMeaOfTraAtDHEA80>\n<ConIndHEA96>0</ConIndHEA96>\n<NCTRetCopHEA104>0</NCTRetCopHEA104>\n<AccDatHEA158>20201109</AccDatHEA158>\n<IssDatHEA186>20201109</IssDatHEA186>\n<DiaLanIndAtDepHEA254>EN</DiaLanIndAtDepHEA254>\n<NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n<TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n<TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n<TotGroMasHEA307>1000</TotGroMasHEA307>\n<BinItiHEA246>0</BinItiHEA246>\n<AutIdHEA380>GB-AUTH-42</AutIdHEA380>\n<DecDatHEA383>20201109</DecDatHEA383>\n<DecPlaHEA394>Dover</DecPlaHEA394>\n</HEAHEA>\n<TRAPRIPC1><NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n<StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n<PosCodPC123>SS99 1AA</PosCodPC123>\n<CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n<CouPC125>GB</CouPC125>\n<TINPC159>GB954131533000</TINPC159>\n</TRAPRIPC1>\n<TRACONCO1><NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n<StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n<PosCodCO123>SS99 1AA</PosCodCO123>\n<CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n<CouCO125>GB</CouCO125>\n<TINCO159>GB954131533000</TINCO159>\n</TRACONCO1>\n<TRACONCE1><NamCE17>NCTS UK TEST LAB HMCE</NamCE17>\n<StrAndNumCE122>ITALIAN OFFICE</StrAndNumCE122>\n<PosCodCE123>IT99 1IT</PosCodCE123>\n<CitCE124>MILAN</CitCE124>\n<CouCE125>IT</CouCE125>\n<TINCE159>IT11ITALIANC11</TINCE159>\n</TRACONCE1>\n<CUSOFFDEPEPT><RefNumEPT1>GB000060</RefNumEPT1>\n</CUSOFFDEPEPT>\n<CUSOFFTRARNS><RefNumRNS1>FR001260</RefNumRNS1>\n<ArrTimTRACUS085>202011111656</ArrTimTRACUS085>\n</CUSOFFTRARNS>\n<CUSOFFDESEST><RefNumEST1>IT018100</RefNumEST1>\n</CUSOFFDESEST>\n<CUSOFFRETCOPOCP><RefNumOCP1>GB000001</RefNumOCP1>\n<CusOffNamOCP2>Central Community Transit Office</CusOffNamOCP2>\n<StrAndNumOCP3>BT-CCTO, HM Revenue and Customs</StrAndNumOCP3>\n<CouOCP4>GB</CouOCP4>\n<PosCodOCP6>BX9 1EH</PosCodOCP6>\n<CitOCP7>SALFORD</CitOCP7>\n</CUSOFFRETCOPOCP>\n<CONRESERS><ConDatERS14>20201109</ConDatERS14>\n<ConResCodERS16>A3</ConResCodERS16>\n<ConByERS18>Not Controlled</ConByERS18>\n<DatLimERS69>20201117</DatLimERS69>\n</CONRESERS>\n<SEAINFSLI><SeaNumSLI2>1</SeaNumSLI2>\n<SEAIDSID><SeaIdeSID1>NCTS001</SeaIdeSID1>\n</SEAIDSID>\n</SEAINFSLI>\n<GUAGUA><GuaTypGUA1>1</GuaTypGUA1>\n<GUAREFREF><GuaRefNumGRNREF1>20GB0000010000GX1</GuaRefNumGRNREF1>\n<AccCodREF6>AC01</AccCodREF6>\n<VALLIMECVLE><NotValForECVLE1>0</NotValForECVLE1>\n</VALLIMECVLE>\n</GUAREFREF>\n</GUAGUA>\n<GOOITEGDS><IteNumGDS7>1</IteNumGDS7>\n<GooDesGDS23>Wheat</GooDesGDS23>\n<GroMasGDS46>1000</GroMasGDS46>\n<NetMasGDS48>950</NetMasGDS48>\n<SPEMENMT2><AddInfMT21>10000EUR20GB0000010000GX1</AddInfMT21>\n<AddInfCodMT23>CAL</AddInfCodMT23>\n</SPEMENMT2>\n<PACGS2><MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n<KinOfPacGS23>BX</KinOfPacGS23>\n<NumOfPacGS24>10</NumOfPacGS24>\n</PACGS2>\n</GOOITEGDS>\n</CC029B>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.12 - DECLARATION 12 â€“ Safety & Security Simplified Declaration at Departure",
					"item": [
						{
							"name": "01- IE015 Simplified Departures",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC12\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AutLocOfGooCodHEA41>954131533-GB60DEP</AutLocOfGooCodHEA41>\n        <PlaOfLoaCodHEA46>DOVER018</PlaOfLoaCodHEA46>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <TraModAtBorHEA76>3</TraModAtBorHEA76>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <IdeOfMeaOfTraCroHEA85>NC15 REG</IdeOfMeaOfTraCroHEA85>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n        <SpeCirIndHEA1>C</SpeCirIndHEA1>\n        <ComRefNumHEA>HQDOV018</ComRefNumHEA>\n        <SecHEA358>1</SecHEA358>\n        <CodPlUnHEA357>MONOPOLI018</CodPlUnHEA357>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>NCTS UK TEST LAB HMCE</NamCE17>\n        <StrAndNumCE122>ITALIAN OFFICE</StrAndNumCE122>\n        <PosCodCE123>IT99 1IT</PosCodCE123>\n        <CitCE124>MILAN</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT11ITALIANC11</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <CONRESERS>\n         <ConResCodERS16>A3</ConResCodERS16>\n         <DatLimERS69>{{DatLimERS69}}</DatLimERS69>\n    </CONRESERS>\n     <SEAINFSLI>\n        <SeaNumSLI2>1</SeaNumSLI2>\n        <SEAIDSID>\n            <SeaIdeSID1>NCTS001</SeaIdeSID1>\n        </SEAIDSID>\n    </SEAINFSLI>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n    <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Wheat</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>5000.00GBP09GB00000100000M0</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n\n    </GOOITEGDS>\n    <ITI>\n        <CouOfRouCodITI1>GB</CouOfRouCodITI1>\n    </ITI>\n    <ITI>\n        <CouOfRouCodITI1>FR</CouOfRouCodITI1>\n    </ITI>\n       <ITI>\n        <CouOfRouCodITI1>IT</CouOfRouCodITI1>\n    </ITI>\n     <TRACORSEC037>\n        <TINTRACORSEC044>GB954131533000</TINTRACORSEC044>\n    </TRACORSEC037>\n    <TRACONSEC029>\n        <TINTRACONSEC036>IT27THEBOSS42</TINTRACONSEC036>\n    </TRACONSEC029>\n</CC015B>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 > IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.13 - IE060 (Control Decision Notification) - Manual Intervention",
					"item": [
						{
							"name": "01- POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC2\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <IdeOfMeaOfTraAtDHEA78LNG>EN</IdeOfMeaOfTraAtDHEA78LNG>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n   </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <NADLNGPC>EN</NADLNGPC>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>NCTS UK TEST LAB HMCE</NamCE17>\n        <StrAndNumCE122>ITALIAN OFFICE</StrAndNumCE122>\n        <PosCodCE123>IT99 1IT</PosCodCE123>\n        <CitCE124>MILAN</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT11ITALIANC11</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>08GB00000100005N0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>20.22EUR08GB00000100005N0</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL Messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.14 - IE051 (No Release for Transit)",
					"item": [
						{
							"name": "01- POST IE015 Normal Departures ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC14\";",
											"var charset = moment().format(\"YYMMDDHHmm\");",
											"",
											"text += charset;",
											"console.log (\"Text value is \"+text)",
											"",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <IdeOfMeaOfTraAtDHEA78LNG>EN</IdeOfMeaOfTraAtDHEA78LNG>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n   </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <NADLNGPC>EN</NADLNGPC>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <TRACONCO1>\n        <NamCO17>NCTS UK TEST LAB HMCE</NamCO17>\n        <StrAndNumCO122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO122>\n        <PosCodCO123>SS99 1AA</PosCodCO123>\n        <CitCO124>SOUTHEND-ON-SEA, ESSEX</CitCO124>\n        <CouCO125>GB</CouCO125>\n        <TINCO159>GB954131533000</TINCO159>\n    </TRACONCO1>\n    <TRACONCE1>\n        <NamCE17>NCTS UK TEST LAB HMCE</NamCE17>\n        <StrAndNumCE122>ITALIAN OFFICE</StrAndNumCE122>\n        <PosCodCE123>IT99 1IT</PosCodCE123>\n        <CitCE124>MILAN</CitCE124>\n        <CouCE125>IT</CouCE125>\n        <TINCE159>IT11ITALIANC11</TINCE159>\n    </TRACONCE1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>FR001260</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>08GB00000100005N0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n        <AddInfMT21>20.22EUR08GB00000100005N0</AddInfMT21>\n        <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "02- GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03- GET ALL IE015 > IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ArrTimTRACUS085",
			"value": "202102101501"
		},
		{
			"key": "DatLimERS69",
			"value": "20210216"
		},
		{
			"key": "DatOfPreMES9",
			"value": "20210208"
		},
		{
			"key": "DecDatHEA383",
			"value": "20210208"
		},
		{
			"key": "IntConRefMES11",
			"value": 41485829727939
		},
		{
			"key": "RefNumHEA4",
			"value": "TRATESTDEC122102081501"
		},
		{
			"key": "TimOfPreMES10",
			"value": "1501"
		},
		{
			"key": "ArrNotDatHEA141",
			"value": "20210208"
		},
		{
			"key": "MRN",
			"value": "08IT02110010000FF0"
		},
		{
			"key": "DatOfCanReqHEA147",
			"value": "20210205"
		},
		{
			"key": "UnlDatREM67",
			"value": "20210205"
		}
	]
}