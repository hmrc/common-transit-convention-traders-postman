{
	"info": {
		"_postman_id": "5a7f3608-c799-40aa-bb01-86ff5517ad7f",
		"name": "12B_P5 (TT) Small Messages E2E XI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29542792",
		"_collection_link": "https://ctctradersapi.postman.co/workspace/End-to-End-Testing~47c6e04a-4da9-425d-845c-9579557f9e63/collection/26102216-5a7f3608-c799-40aa-bb01-86ff5517ad7f?action=share&source=collection_link&creator=29542792"
	},
	"item": [
		{
			"name": "Departures",
			"item": [
				{
					"name": "Simplified",
					"item": [
						{
							"name": "DSXI1: Simplified Departures",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64c9158bba543ea2/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64c9158bba543ea2",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64620ab2768458c8/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64620ab2768458c8",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DSXI2: Simplified Departures with Safety and Security data",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>1</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <modeOfTransportAtTheBorder>1</modeOfTransportAtTheBorder>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <CountryOfRoutingOfConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <country>GB</country>\n        </CountryOfRoutingOfConsignment>\n        <ActiveBorderTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <customsOfficeAtBorderReferenceNumber>XI000081</customsOfficeAtBorderReferenceNumber>\n            <typeOfIdentification>11</typeOfIdentification>\n            <identificationNumber>Spideychelle</identificationNumber>\n            <nationality>XI</nationality>\n        </ActiveBorderTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <PlaceOfUnloading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfUnloading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a4164be6695b5f/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a4164be6695b5f",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64620ab2768458c8/messages/64620ab6b2468fca",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64620ab2768458c8",
												"messages",
												"64620ab6b2468fca"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DSXI4: Cancellation request by the holder of the transit procedure before release for transit",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64c92170cf97584b/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64c92170cf97584b",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64620c1e5a3bbc40/messages/64620c215c22f141",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64620c1e5a3bbc40",
												"messages",
												"64620c215c22f141"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE014",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATEST9\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"console.log(messageId)",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081UMD1JLJ9</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928 →IE028→IE014→ IE009 Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DSXI5: Cancellation request by the holder of the transit procedure after release for transit",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64620f061b8ba747/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64620f061b8ba747",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028→IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64620f061b8ba747/messages/64620f1ae39f83c6",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64620f061b8ba747",
												"messages",
												"64620f1ae39f83c6"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE014",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATEST9\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"console.log(messageId)",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081VPI5N2J5</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928 →IE028→IE029→IE014→ IE056",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DSXI6: Control by office of departure satisfactory",
							"item": [
								{
									"name": "01- POST IE015 Simplified Journey",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64c9220e07fa5b15/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64c9220e07fa5b15",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028→ IE060 → IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DSXI7: Control by office of departure unsatisfactory",
							"item": [
								{
									"name": "01- POST IE015 Simplified Journey",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64621dd33ef996f9/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64621dd33ef996f9",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028→ IE060→ IE051",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DSXI8: Cancellation of a transit declaration after release for transit by OoDep",
							"item": [
								{
									"name": "01- POST IE015 Simplified Journey",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a3f0fb2ed4f285/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a3f0fb2ed4f285",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028→IE029→ IE009",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DSXI9: Release for transit refused due to guarantee checks failure",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000110</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a3ee3d96769e64/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a3ee3d96769e64",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64620ab2768458c8/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64620ab2768458c8",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DSXI10: Simplified Departures amendments",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE013 Simplified",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"console.log(messageId)",
													"",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC013C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <MRN>23XI0000816TC6M2J8</MRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET json IE015 → IE928 →IE028→IE013-> IE004->IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/{{messageId}}",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages",
												"{{messageId}}"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "Normal",
					"item": [
						{
							"name": "DNXI1: Normal Departures",
							"item": [
								{
									"name": "01- POST IE015 Normal Journey",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a415b5b15e577c/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a415b5b15e577c",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/6499a3d4e00707e0/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"6499a3d4e00707e0",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DNXI2: Normal Departures with safety and security",
							"item": [
								{
									"name": "01- POST IE015 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>1</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <modeOfTransportAtTheBorder>1</modeOfTransportAtTheBorder>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <CountryOfRoutingOfConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <country>GB</country>\n        </CountryOfRoutingOfConsignment>\n        <ActiveBorderTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <customsOfficeAtBorderReferenceNumber>XI000081</customsOfficeAtBorderReferenceNumber>\n            <typeOfIdentification>11</typeOfIdentification>\n            <identificationNumber>Spideychelle</identificationNumber>\n            <nationality>XI</nationality>\n        </ActiveBorderTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <PlaceOfUnloading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfUnloading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a3fa79d963fc03/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a3fa79d963fc03",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a3fa79d963fc03/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a3fa79d963fc03",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DNXI4: Cancellation request by the holder of the transit procedure before release for transit",
							"item": [
								{
									"name": "01- POST IE015 Normal Journey",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/6464a47081453f20/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"6464a47081453f20",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/6464a47081453f20/messages/6464a53b62571fb1",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"6464a47081453f20",
												"messages",
												"6464a53b62571fb1"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE014",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATEST9\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"console.log(messageId)",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081NAQCSCJ0</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928 →IE028→IE014→ IE009 Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/644a967f61a46534/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"644a967f61a46534",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DNXI5: Cancellation request by the holder of the transit procedure after release for transit",
							"item": [
								{
									"name": "01- POST IE015 Normal Journey",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/646493c0460a6ace/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"646493c0460a6ace",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028→IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/6462131da4e82ab3/messages/646213232a2107cc",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"6462131da4e82ab3",
												"messages",
												"646213232a2107cc"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE014",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATEST9\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
													"//depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"messageId\",messageId);",
													"console.log(messageId)",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081JYKOEGJ1</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928 →IE028→IE029→IE014→ IE056",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DNXI6: Control by office of departure satisfactory",
							"item": [
								{
									"name": "01- POST IE015 Normal Journey",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI15\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/65250d4f3a2d1e9a/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"65250d4f3a2d1e9a",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028→ IE060→ IE029 Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DNXI7: Control by office of departure unsatisfactory",
							"item": [
								{
									"name": "01- POST IE015 Normal Journey",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a41ffafbb77984/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a41ffafbb77984",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028→ IE060→ IE051",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DNXI8: Normal Departures TIR",
							"item": [
								{
									"name": "01- POST IE015 Normal XI to XI",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>TIR</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <TIRCarnetNumber>XN25000050</TIRCarnetNumber>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI005160</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n        <TIRHolderIdentificationNumber>DK222222222</TIRHolderIdentificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>B</guaranteeType>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a4216bb746a6ee/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a4216bb746a6ee",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029 Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DNXI9: Cancellation of a transit declaration after release for transit by OoDep",
							"item": [
								{
									"name": "01- POST IE015 Normal Journey",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a3f1f9eb2b1f39/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a3f1f9eb2b1f39",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a3f1f9eb2b1f39/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a3f1f9eb2b1f39",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DNXI10: Release for transit refused due to guarantee checks failure",
							"item": [
								{
									"name": "01- POST IE015 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000110</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/65250791f2233a3f/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"65250791f2233a3f",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028 → IE055 → IE051",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "DNXI11: Normal Departures amendments",
							"item": [
								{
									"name": "01- POST IE015 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/65250a8c23a044ea/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"65250a8c23a044ea",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE013",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC013C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081Z7NPLEJ3</MRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928 →IE028→IE013-> IE004->IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/644a57f09d4b72e5/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"644a57f09d4b72e5",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Arrivals",
			"item": [
				{
					"name": "Simplified",
					"item": [
						{
							"name": "ASXI1: Simplified Arrival",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATESTGB32\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>GB Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE928 > IE028 > IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/652514720b84f967/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"652514720b84f967",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var arrivalId =  jsonData._links.self.href.split(\"/\")[5]",
													"",
													"pm.environment.set(\"arrivalId\",arrivalId);",
													"",
													"",
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246MGV2UDJ0</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIAUTHDES02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE007 -> IE043",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/652514dad3a20d32/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"652514dad3a20d32",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06- IE044 (Unloading Remarks)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let moment = require('moment')",
													"let today = moment();",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													"",
													"pm.collectionVariables.set(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true,
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246MGV2UDJ0</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>1</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07- GET ALL IE007 →IE043→  IE044 → IE025 → IE045",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/64522fd2767a78ee/messages/645230919b9bed33",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64522fd2767a78ee",
												"messages",
												"645230919b9bed33"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "ASXI2: Unloading Remarks Rejected/Accepted",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATESTGB33\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>GB Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64c91ae922897014/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64c91ae922897014",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 → IE028 → IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var arrivalId =  jsonData._links.self.href.split(\"/\")[5]",
													"",
													"pm.environment.set(\"arrivalId\",arrivalId);",
													"",
													"",
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB0002466BDOY1J1</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIAUTHDES02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE007 -> IE043",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/64c91b327843cb61/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64c91b327843cb61",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06- No StateOfSeals tag IE044 (Unloading Remarks)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment')",
													"let yesterday = moment();",
													"yesterday.subtract(1, 'days');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													"",
													"pm.collectionVariables.set(\"unloadingDate\", yesterday.format(\"YYYY-MM-DD\"))",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true,
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB0002466BDOY1J1</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n    </UnloadingRemark>\n</ncts:CC044C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07- GET IE007 →IE043→  IE044→ IE057",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "08- VALID IE044 (Unloading Remarks)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment')",
													"let today = moment();",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													"",
													"pm.collectionVariables.set(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true,
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB0002466BDOY1J1</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>1</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "09- GET messages IE007 →IE043→  IE044→ IE057 → IE044 → IE025 →  IE045",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "ASXI3: Major discrepancies resolved",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATESTGB34\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var depId =  jsonData._links.self.href",
													"depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"deptId\",depId);",
													"console.log(\"department id is \"+depId)",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>GB Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64c91da61e3e576d/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64c91da61e3e576d",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028→IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{deptId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{deptId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var loc = postman.getResponseHeader(\"Location\").toString();",
													"",
													"var arrivalId = loc.split(\"/\")[5];",
													"pm.environment.set(\"arrivalId\",arrivalId);",
													"",
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246Q9N0K6J0</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIAUTHDES02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE007 -> IE043",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/64c91e18d68b6982/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64c91e18d68b6982",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06- VALID IE044 (Unloading Remarks)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment')",
													"let today = moment();",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													"",
													"pm.collectionVariables.set(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true,
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246Q9N0K6J0</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/64c91e18d68b6982/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64c91e18d68b6982",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07- GET IE007 -> IE043 -> IE044 ->IE025 → IE019 → IE025 → IE045",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "ASXI4: Major discrepancies confirmed",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATESTXI33\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var depId =  jsonData._links.self.href",
													"depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"deptId\",depId);",
													"console.log(\"department id is \"+depId)",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>GB Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64c91f84085582d4/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64c91f84085582d4",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029 -> IE035",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{deptId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{deptId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var arrivalId =  jsonData._links.self.href.split(\"/\")[5]",
													"",
													"pm.environment.set(\"arrivalId\",arrivalId);",
													"",
													"",
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246DZ2DMLJ6</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIAUTHDES02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE007 -> IE043",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/64c91fbf6c779e76/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64c91fbf6c779e76",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06- VALID IE044 (Unloading Remarks)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment')",
													"let today = moment();",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													"",
													"pm.collectionVariables.set(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true,
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246BQH0VQJ3</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n</ncts:CC044C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07- GET IE007 -> IE043 -> IE044 ->IE025 → IE019 -> IE035",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "ASXI5: Non Conformance",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATESTGB32\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>2000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>2000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>GB Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n            <ConsignmentItem>\n                <goodsItemNumber>2</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>100119</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>wheat</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE928 > IE028 > IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/652673230c7b72d8/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"652673230c7b72d8",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var arrivalId =  jsonData._links.self.href.split(\"/\")[5]",
													"",
													"pm.environment.set(\"arrivalId\",arrivalId);",
													"",
													"",
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246SOZ140J5</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIAUTHDES02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE007 -> IE043",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/6526738a45ca8571/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"6526738a45ca8571",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "06- IE044 (Unloading Remarks)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let moment = require('moment')",
													"let today = moment();",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													"",
													"pm.collectionVariables.set(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true,
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC044C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246SOZ140J5</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>0</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>\n    <Consignment>\n        <grossMass>2750.000</grossMass>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>2750.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Barley</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>950691</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>750.000</grossMass>\n                        <netMass>750.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <numberOfPackages>1</numberOfPackages>\n                </Packaging>\n            </ConsignmentItem>\n            <ConsignmentItem>\n                <goodsItemNumber>2</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <GoodsMeasure>\n                        <grossMass>2000.000</grossMass>\n                        <netMass>2000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC044C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"{{arrivalId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07- GET ALL IE007 →IE043→  IE044 → IE025 → IE045",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/64522fd2767a78ee/messages/645230919b9bed33",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64522fd2767a78ee",
												"messages",
												"645230919b9bed33"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "Normal",
					"item": [
						{
							"name": "ANXI1: Normal Arrival",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATESTGB31\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>GB Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64c916e2730e0ee9/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64c916e2730e0ee9",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 → IE028 → IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"customs",
												"transits",
												"movements",
												"departures",
												"{{deptId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var arrivalId =  jsonData._links.self.href.split(\"/\")[5]",
													"",
													"pm.environment.set(\"arrivalId\",arrivalId);",
													"",
													"",
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB0002460KDZ43J8</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>0</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE007 -> IE025",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/64c9179b21811061/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64c9179b21811061",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "Normal-Simplified",
					"item": [
						{
							"name": "AXI1: Rejection of the Arrival Notification",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATESTGB34\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.GB</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBAUTHDEP01</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB953574106000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23GB0000010000058</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <!-- <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading> -->\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>GB Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928 →IE028",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64c91cd47264757e/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64c91cd47264757e",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - GET ALL IE015 → IE928 →IE028→IE029 →IE009",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE007 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var arrivalId =  jsonData._links.self.href.split(\"/\")[5]",
													"",
													"pm.environment.set(\"arrivalId\",arrivalId);",
													"",
													"",
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC007C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246Z3HROPJ7</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIAUTHDES02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET IE007 -> IE057",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all arrival must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/arrivals/64c91d3267508355/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"arrivals",
												"64c91d3267508355",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "PreLodged",
			"item": [
				{
					"name": "Simplified",
					"item": [
						{
							"name": "PSXI1: Prelodged Declaration",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/65250e8b0b974bfa/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"65250e8b0b974bfa",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE170",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12310100942</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n   <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928→ IE170 →IE028→ IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PSXI2: Transit presentation not valid/rejected",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a41c4634fb8c89/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a41c4634fb8c89",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a3d53f4a9944f2/messages/64a3d542e578c69b",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a3d53f4a9944f2",
												"messages",
												"64a3d542e578c69b"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE170",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var depId =  jsonData._links.self.href",
													"depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"deptId\",depId);",
													"console.log(\"department id is \"+depId)",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12307041419</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n   <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928→ IE170 →IE056 -> IE056",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PSXI3: Corrections (Amendments)",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64c923166465c43c/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64c923166465c43c",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64899e4e19a8cd88/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64899e4e19a8cd88",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE013",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC013C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12308011621</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>                \n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928→ IE013 → IE004",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE170",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12308011621</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n   <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07 - GET ALL IE015 → IE928→ IE013 → IE004 → IE170 → IE028 → IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PSXI4: Cancellation",
							"item": [
								{
									"name": "01- POST IE015 Simplified",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTHDEP02</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a3dff23f0cd0ea/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a3dff23f0cd0ea",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/6489a474d0d28afd/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"6489a474d0d28afd",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - POST IE014",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATEST9\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12307041001</LRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - GET ALL IE015 → IE928 →  IE014 → IE009",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "Normal",
					"item": [
						{
							"name": "PNXI1: Prelodged Declaration",
							"item": [
								{
									"name": "01- POST IE015 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a3d3b7f78c7ec7/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a3d3b7f78c7ec7",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE170",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var depId =  jsonData._links.self.href",
													"depId = depId.split(\"/\")[5]",
													"pm.environment.set(\"deptId\",depId);",
													"console.log(\"department id is \"+depId)",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n      <LRN>TRATESTXI12307040909</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928→ IE170 →IE028→ IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PNXI2: Transit presentation not valid/rejected",
							"item": [
								{
									"name": "01- POST IE015 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>1000.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a41c8952baea61/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a41c8952baea61",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a3d6708af630b6/messages/64a3d67304800065",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a3d6708af630b6",
												"messages",
												"64a3d67304800065"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE170",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n      <LRN>TRATESTXI12307041420</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBXYZ</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928→ IE170 →IE056 -> IE056",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PNXI3: Corrections (Amendments)",
							"item": [
								{
									"name": "01- POST IE015 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/65250f8d3dd47529/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"65250f8d3dd47529",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/6489a19cc21896ef/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"6489a19cc21896ef",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE013",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC013C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12310100947</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastic toys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05- GET ALL IE015 → IE928→ IE013 → IE004",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04- POST IE170",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC170C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n      <LRN>TRATESTXI12310100947</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "07 - GET ALL IE015 → IE928→ IE013 → IE004 → IE170 → IE028 → IE029",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PNXI4: Cancellation",
							"item": [
								{
									"name": "01- POST IE015 Normal",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"let LRN=\"TRATESTXI1\";",
													"let charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC015C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>23XI00000100000D0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.00</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI175521246821</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB953574106000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Plastictoys</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000</grossMass>\n                        <netMass>950.000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures"
											]
										}
									},
									"response": []
								},
								{
									"name": "02- GET IE015 dept Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/64a3e4975c4e5389/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"64a3e4975c4e5389",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "03- GET ALL IE015 → IE928",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/6489a7c44d78179d/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"6489a7c44d78179d",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - POST IE014",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const moment = require('moment');",
													"let now = moment();",
													"now.add('14', 'days');",
													"",
													"let limitDate = now.format(\"YYYY-MM-DD\")",
													"",
													"let arrivalTime = moment();",
													"arrivalTime.add('14', 'days');",
													"",
													"var LRN=\"TRATEST9\";",
													"var charset = moment().format(\"YYMMDDHHmm\");",
													"",
													"LRN += charset;",
													"",
													"pm.collectionVariables.set(\"LRN\", LRN);",
													"pm.collectionVariables.set(\"limitDate\", limitDate);",
													"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
													"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
													"pm.environment.set(\"departureId\",departureId);",
													"",
													"pm.test(\"POST IE015 must return response code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"if (pm.response.code !== 202) {",
													"    return;",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/xml",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.hmrc.2.0+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ncts:CC014C PhaseID=\"NCTS5.1\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NTA.XI</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12307041021</LRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Container broken</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - GET ALL IE015 → IE928 →  IE014 → IE009",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Get all messages must return status code 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"if (pm.response.code !== 200) {",
													"    return;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.hmrc.2.0+json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
											"host": [
												"{{baseUrlContext}}"
											],
											"path": [
												"movements",
												"departures",
												"{{departureId}}",
												"messages"
											]
										}
									},
									"response": []
								}
							],
							"description": "IE015 > IE016",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "LRN",
			"value": ""
		},
		{
			"key": "limitDate",
			"value": ""
		},
		{
			"key": "preparationDateAndTime",
			"value": ""
		},
		{
			"key": "arrivalTime",
			"value": ""
		},
		{
			"key": "messageIdentification",
			"value": ""
		},
		{
			"key": "unloadingDate",
			"value": ""
		},
		{
			"key": "arrivalNotificationDateAndTime",
			"value": ""
		}
	]
}