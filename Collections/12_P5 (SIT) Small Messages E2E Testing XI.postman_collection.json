{
	"info": {
		"_postman_id": "b75cf63d-241a-4813-b1c9-24c5e4d96c74",
		"name": "12_P5 (SIT) Small Messages E2E Testing XI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26102216"
	},
	"item": [
		{
			"name": "01 - Simplified Departure Single house consignment to single consignee",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>10000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/64511aa8b25e6516/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"64511aa8b25e6516",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/64511aa8b25e6516/messages/64511aae46e4be43",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"64511aa8b25e6516",
								"messages",
								"64511aae46e4be43"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "02 - Normal Departure Single house consignment to single consignee",
			"item": [
				{
					"name": "01- POST IE015 Normal Journey",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/6451064b6dd67c06/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"6451064b6dd67c06",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/6451064b6dd67c06/messages/64510650775df428",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"6451064b6dd67c06",
								"messages",
								"64510650775df428"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "03 - Simplified Departure Safety and Security data",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>1</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>10000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <modeOfTransportAtTheBorder>1</modeOfTransportAtTheBorder>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <CountryOfRoutingOfConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <country>XI</country>\n        </CountryOfRoutingOfConsignment>\n        <ActiveBorderTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <customsOfficeAtBorderReferenceNumber>GB000246</customsOfficeAtBorderReferenceNumber>\n            <typeOfIdentification>11</typeOfIdentification>\n            <identificationNumber>Spideychelle</identificationNumber>\n            <nationality>XI</nationality>\n        </ActiveBorderTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <PlaceOfUnloading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfUnloading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a33c90fcb1d71/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a33c90fcb1d71",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/644a33cc463ed825",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"644a33cc463ed825"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "04 - Simplified Departure Single house consignment Departures with Rejection of a transit declaration",
			"item": [
				{
					"name": "01- POST IE015 Simplified Journey",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>10000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI XYZ BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 GET ALL IE015 > IE056",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 GET ALL IE015 > IE056 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644b96fddc6712a5/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644b96fddc6712a5",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 GET ALL IE015 > IE056 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644b96fddc6712a5/messages/644b97002f2eda98",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644b96fddc6712a5",
								"messages",
								"644b97002f2eda98"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "05 - Normal Departure Single house consignment Departures with Rejection of a transit declaration",
			"item": [
				{
					"name": "01- POST IE015 Normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>10000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>FRCQF</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE056",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE056 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644b941f604513e4/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644b941f604513e4",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE056 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644b941f604513e4/messages/644b9422f198a3da",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644b941f604513e4",
								"messages",
								"644b9422f198a3da"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "06 - Normal Departure with invalid GRN",
			"item": [
				{
					"name": "01- POST IE015 Normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000110</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 → IE055 → IE051",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 → IE055 → IE051 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a36a8464df790/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a36a8464df790",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 → IE055 → IE051 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a36a8464df790/messages/644a386642fc4c4c",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a36a8464df790",
								"messages",
								"644a386642fc4c4c"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 → IE055 → IE051 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/644a386642fc4c4c",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"644a386642fc4c4c"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 → IE055 → IE051 Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "07 - Simplified Departure with amendments accepted",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/64526aa12a764f95/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"64526aa12a764f95",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/645260f5bb3d9fd4/messages/645260ff3e148211",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"645260f5bb3d9fd4",
								"messages",
								"645260ff3e148211"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json-xml"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/645260f5bb3d9fd4/messages/645260ff3e148211",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"645260f5bb3d9fd4",
								"messages",
								"645260ff3e148211"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE013",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
									"//depId = depId.split(\"/\")[5]",
									"pm.environment.set(\"messageId\",messageId);",
									"console.log(messageId)",
									"",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC013C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <MRN>23XI0000818FVE00J7</MRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET json IE015 → IE928 →IE028→IE013-> IE004->IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/{{messageId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"{{messageId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 →IE028→IE013-> IE004->IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/64526aa12a764f95/messages/64526aecc9496e1f",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"64526aa12a764f95",
								"messages",
								"64526aecc9496e1f"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 →IE028→IE013-> IE004->IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6443bbe0688555df",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6443bbe0688555df"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET IE015 → IE928 →IE028→IE013-> IE004->IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json-xml"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/{{messageId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"{{messageId}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "08 - Normal Departure with amendments accepted",
			"item": [
				{
					"name": "01- POST IE015 Normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a57f09d4b72e5/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a57f09d4b72e5",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a57f09d4b72e5/messages/644a57f32086e4f6",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a57f09d4b72e5",
								"messages",
								"644a57f32086e4f6"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a57f09d4b72e5/messages/644a58a358d6b8d6",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a57f09d4b72e5",
								"messages",
								"644a58a358d6b8d6"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE013",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC013C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <MRN>23XI0000813IDVJNJ1</MRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 →IE028→IE013-> IE004->IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a57f09d4b72e5/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a57f09d4b72e5",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 →IE028→IE013-> IE004->IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6443a00b3c9d4dc0",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6443a00b3c9d4dc0"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 →IE028→IE013-> IE004->IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "09 - Simplified Departure with Cancellation before release for transit",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a4c215f95937c/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a4c215f95937c",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a4c215f95937c/messages/644a4c262e604b8b",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a4c215f95937c",
								"messages",
								"644a4c262e604b8b"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE014",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"var LRN=\"TRATEST9\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
									"//depId = depId.split(\"/\")[5]",
									"pm.environment.set(\"messageId\",messageId);",
									"console.log(messageId)",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081MZBN2FJ9</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <decisionDateAndTime>{{decisionDateAndTime}}</decisionDateAndTime>\n        <decision>1</decision>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 →IE028→IE014→ IE009 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 →IE028→IE014→ IE009",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a4c215f95937c/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a4c215f95937c",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "10 - Normal Departure with Cancellation before release for transit",
			"item": [
				{
					"name": "01- POST IE015 Normal Journey",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a967f61a46534/messages/644a96829bd1b9e4",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a967f61a46534",
								"messages",
								"644a96829bd1b9e4"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a967f61a46534/messages/644a973d08721502",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a967f61a46534",
								"messages",
								"644a973d08721502"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE014",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"var LRN=\"TRATEST9\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
									"//depId = depId.split(\"/\")[5]",
									"pm.environment.set(\"messageId\",messageId);",
									"console.log(messageId)",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081IAKGN4J3</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <decisionDateAndTime>{{decisionDateAndTime}}</decisionDateAndTime>\n        <decision>1</decision>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 →IE028→IE014→ IE009 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a967f61a46534/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a967f61a46534",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 →IE028→IE014→ IE009",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "11 - Simplified Departure with Cancellation after release for transit",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a4eb9255a7e5d/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a4eb9255a7e5d",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→IE029 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a4eb9255a7e5d/messages/644a4ebcbf101a4e",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a4eb9255a7e5d",
								"messages",
								"644a4ebcbf101a4e"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE014",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"var LRN=\"TRATEST9\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
									"//depId = depId.split(\"/\")[5]",
									"pm.environment.set(\"messageId\",messageId);",
									"console.log(messageId)",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081YIUYISJ0</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <decisionDateAndTime>{{decisionDateAndTime}}</decisionDateAndTime>\n        <decision>1</decision>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 →IE028→IE029→IE014→ IE056",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 →IE028→IE029→IE014→ IE056 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/644a4f96100c84ea",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"644a4f96100c84ea"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "12 - Normal Departure with Cancellation after release for transit",
			"item": [
				{
					"name": "01- POST IE015 Normal Journey",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a992424334216/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a992424334216",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→IE029 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a992424334216/messages/644a9977dc4bbff4",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a992424334216",
								"messages",
								"644a9977dc4bbff4"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/644a9872649cd3a6",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"644a9872649cd3a6"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE014",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"var LRN=\"TRATEST9\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var messageId =  jsonData._links.self.href.split(\"/\")[7]",
									"//depId = depId.split(\"/\")[5]",
									"pm.environment.set(\"messageId\",messageId);",
									"console.log(messageId)",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <MRN>23XI000081JM2HU9J5</MRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <decisionDateAndTime>{{decisionDateAndTime}}</decisionDateAndTime>\n        <decision>1</decision>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 →IE028→IE029→IE014→ IE056",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "13 - Simplified Departure with Cancellation of a transit declaration after release for transit by OoDep",
			"item": [
				{
					"name": "01- POST IE015 Simplified Journey",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→IE029→ IE009",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→IE029→ IE009 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a5c90fcd13823/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a5c90fcd13823",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→IE029→ IE009 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a5c90fcd13823/messages/644a5c93ef9624e7",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a5c90fcd13823",
								"messages",
								"644a5c93ef9624e7"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "14 - Simplified Departure withControl by office of departure satisfactory",
			"item": [
				{
					"name": "01- POST IE015 Simplified Journey",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE060 → IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE060 → IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a7806210aa7d9/messages/644a78be532a45ac",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a7806210aa7d9",
								"messages",
								"644a78be532a45ac"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE060 → IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/644a780a949fc337",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"644a780a949fc337"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "15 - Normal Departure withControl by office of departure satisfactory",
			"item": [
				{
					"name": "01- POST IE015 Normal Journey",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI15\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE060→ IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE060→ IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a7b474f1e6790/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a7b474f1e6790",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE060→ IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a7b474f1e6790/messages/644a7bc0ccc7bf4e",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a7b474f1e6790",
								"messages",
								"644a7bc0ccc7bf4e"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "16 - Simplified Departure with Control by office of departure unsatisfactory",
			"item": [
				{
					"name": "01- POST IE015 Simplified Journey",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE060→ IE051",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "17 - Normal Departure with Control by office of departure unsatisfactory",
			"item": [
				{
					"name": "01- POST IE015 Normal Journey",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE060→ IE051",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE060→ IE051 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a93dc80b09c47/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a93dc80b09c47",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE060→ IE051 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a93dc80b09c47/messages/644a93de09f6bac0",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a93dc80b09c47",
								"messages",
								"644a93de09f6bac0"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "(BLOCKED)18 - Simplified Departure with Auto insertion of Guarantee amount",
			"item": [
				{
					"name": "01- POST IE015 Simplified Journey",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>1</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered></amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "19 - Simplified Departure with Multiple house consignor to multiple consignee",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1022.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <Consignor>\n                <identificationNumber>XI985524247819</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Veggies</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Veggie Boxes to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n        <HouseConsignment>\n            <sequenceNumber>2</sequenceNumber>\n            <grossMass>22.000000000000</grossMass>\n            <Consignor>\n                <identificationNumber>GB954131533000</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Bike</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>871200</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>22.000000000000</grossMass>\n                        <netMass>20.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/6443e311bccc1416/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"6443e311bccc1416",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a8e7cefb90e8b/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a8e7cefb90e8b",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a8e7cefb90e8b/messages/644a8e7eee3b74b7",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a8e7cefb90e8b",
								"messages",
								"644a8e7eee3b74b7"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "20 - Normal Departure with Multiple house consignor to multiple consignee",
			"item": [
				{
					"name": "01- POST IE015 Normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1022.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <Consignor>\n                <identificationNumber>XI985524247819</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Veggies</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n        <HouseConsignment>\n            <sequenceNumber>2</sequenceNumber>\n            <grossMass>22.000000000000</grossMass>\n            <Consignor>\n                <identificationNumber>GB954131533000</identificationNumber>\n            </Consignor>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>2</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Bike</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>871200</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>22.000000000000</grossMass>\n                        <netMass>20.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a8cfde98e1914/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a8cfde98e1914",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→ IE029 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a8cfde98e1914/messages/644a8d00bef0bb38",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a8cfde98e1914",
								"messages",
								"644a8d00bef0bb38"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "21 - Simplified Pre-lodged Declaration Single house consignment to single consignee",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6443fa1209b59acf",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6443fa1209b59acf"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE170",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12304221615</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n   <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE170 →IE028→ IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE170 →IE028→ IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6443fa2bf3c2d085",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6443fa2bf3c2d085"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "22 - Normal Pre-lodged Declaration Single house consignment to single consignee",
			"item": [
				{
					"name": "01- POST IE015 Normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6443f2c13fa26283",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6443f2c13fa26283"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json-xml"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6443f2c07ada80ae",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6443f2c07ada80ae"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE170",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var depId =  jsonData._links.self.href",
									"depId = depId.split(\"/\")[5]",
									"pm.environment.set(\"deptId\",depId);",
									"console.log(\"department id is \"+depId)",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n      <LRN>TRATESTXI12304221544</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE170 →IE028→ IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE170 →IE028→ IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6443f2f20b0c874d",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6443f2f20b0c874d"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE170 →IE028→ IE029 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6443f1cb8a806a3e",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6443f1cb8a806a3e"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "23 - Simplified Pre-lodged Declaration Positive with Control",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928→IE060",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928→IE060 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a7d03c62e0438/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a7d03c62e0438",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928→IE060 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a7d03c62e0438/messages/644a7d05c91ef850",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a7d03c62e0438",
								"messages",
								"644a7d05c91ef850"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE170",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var depId =  jsonData._links.self.href",
									"depId = depId.split(\"/\")[5]",
									"pm.environment.set(\"deptId\",depId);",
									"console.log(\"department id is \"+depId)",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12304271447</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n   <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 → IE060 →  IE170 →IE028→ IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644a7d03c62e0438/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644a7d03c62e0438",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "24 - Normal Pre-lodged Declaration Positive with Control",
			"item": [
				{
					"name": "01- POST IE015 Normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>1000.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928→IE060",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928→IE060 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/64523c17126e8ff5/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"64523c17126e8ff5",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928→IE060 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/64523c17126e8ff5/messages/64523c1fd76d1904",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"64523c17126e8ff5",
								"messages",
								"64523c1fd76d1904"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928→IE060 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/64523c17126e8ff5/messages/64523d95b26fcea7",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"64523c17126e8ff5",
								"messages",
								"64523d95b26fcea7"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE170",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n      <LRN>TRATESTXI12305031148</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 → IE060 →  IE170 →IE028→ IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/64523c17126e8ff5/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"64523c17126e8ff5",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928 → IE060 →  IE170 →IE028→ IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/64523c17126e8ff5/messages/64523d2b27a4d6fe",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"64523c17126e8ff5",
								"messages",
								"64523d2b27a4d6fe"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "25 - Simplified Pre-lodged Declaration Transit presentation not valid/rejected",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>1000.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6444ee69d1ff4cd4",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6444ee69d1ff4cd4"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE170",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var depId =  jsonData._links.self.href",
									"depId = depId.split(\"/\")[5]",
									"pm.environment.set(\"deptId\",depId);",
									"console.log(\"department id is \"+depId)",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12304230937</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n   <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>IncorrectNumbner</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE170 →IE056",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE170 →IE056 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6444eb181d3f6eb7",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6444eb181d3f6eb7"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "26 - Normal Pre-lodged Declaration Transit presentation not valid/rejected",
			"item": [
				{
					"name": "01- POST IE015 Normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>1000.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644b8a71f73aac15/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644b8a71f73aac15",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644b8a71f73aac15/messages/644b8a820c8504fa",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644b8a71f73aac15",
								"messages",
								"644b8a820c8504fa"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE170",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>1</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n      <LRN>TRATESTXI12304280957</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>IncorrectCode</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE170 →IE056",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE170 →IE056 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644b8a71f73aac15/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644b8a71f73aac15",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE170 →IE056 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644b8a71f73aac15/messages/644b8ac0fa7000c4",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644b8a71f73aac15",
								"messages",
								"644b8ac0fa7000c4"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "27 - Simplified Pre-lodged Declaration with Amendments",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6447b35f43b3fb91",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6447b35f43b3fb91"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6447abec49c77586",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6447abec49c77586"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE013",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC013C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12304251202</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>                \n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE013 → IE004",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE013 → IE004 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6447a2d238a5ab67",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6447a2d238a5ab67"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE013 → IE004 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6447a1d14ba7f9d9",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6447a1d14ba7f9d9"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE170",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12304251202</LRN>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n   <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "07 - GET ALL IE015 → IE928→ IE013 → IE004 → IE170 → IE028 → IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "07 - GET ALL IE015 → IE928→ IE013 → IE004 → IE170 → IE028 → IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6447b3bbf1be2c48",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6447b3bbf1be2c48"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "28 - Normal Pre-lodged Declaration with Amendments",
			"item": [
				{
					"name": "01- POST IE015 Normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/64467f83660499eb",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"64467f83660499eb"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE013",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC013C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC013C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12304241409</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <amendmentTypeFlag>0</amendmentTypeFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC16REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>                \n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC013C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE013 → IE004",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE015 → IE928→ IE013 → IE004 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/644680b6fab22655",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"644680b6fab22655"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE170",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC170C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC170C</messageType>\n    <TransitOperation>\n      <LRN>{{LRN}}</LRN>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Consignment>\n        <containerIndicator>0</containerIndicator>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC170C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "07 - GET ALL IE015 → IE928→ IE013 → IE004 → IE170 → IE028 → IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "29 - Simplified Pre-lodged Declaration Positive with Cancellation",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/64469915fa094986",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"64469915fa094986"
							]
						}
					},
					"response": []
				},
				{
					"name": "04 - POST IE014",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"var LRN=\"TRATEST9\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <LRN>TRATESTXI12304241558</LRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <decisionDateAndTime>{{decisionDateAndTime}}</decisionDateAndTime>\n        <decision>1</decision>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05 - GET ALL IE015 → IE928 →  IE014 → IE009",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "30 - Normal Pre-lodged Declaration Positive with Cancellation",
			"item": [
				{
					"name": "01- POST IE015 Normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>D</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>1000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "04 - POST IE014",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"var LRN=\"TRATEST9\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC014C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>GB933000</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC014C</messageType>\n    <TransitOperation>\n        <LRN>27ITD9BRA9397FGCJ9</LRN>\n    </TransitOperation>\n    <Invalidation>\n        <requestDateAndTime>{{requestDateAndTime}}</requestDateAndTime>\n        <decisionDateAndTime>{{decisionDateAndTime}}</decisionDateAndTime>\n        <decision>1</decision>\n        <initiatedByCustoms>0</initiatedByCustoms>\n        <justification>Journey with X Boxes of Wheat</justification>\n    </Invalidation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n</ncts:CC014C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05 - GET ALL IE015 → IE928 →  IE014 → IE009",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "(XI)31 - Normal Arrivals",
			"item": [
				{
					"name": "01- POST IE015 Normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"var LRN=\"TRATESTGB31\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB954131533000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>09GB0000010000066</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/movements/departures/644ce4aed589cae7/messages",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"movements",
								"departures",
								"644ce4aed589cae7",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 → IE028 → IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"customs",
								"transits",
								"movements",
								"departures",
								"{{deptId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 → IE028 → IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/645111db6d120f0b/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"645111db6d120f0b",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 → IE028 → IE029 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/645111db6d120f0b/messages/645111dd9aa78822",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"645111db6d120f0b",
								"messages",
								"645111dd9aa78822"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 → IE028 → IE029 Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/645111db6d120f0b/messages/645112704dbe443d",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"645111db6d120f0b",
								"messages",
								"645112704dbe443d"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE007 Normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var arrivalId =  jsonData._links.self.href.split(\"/\")[5]",
									"",
									"pm.environment.set(\"arrivalId\",arrivalId);",
									"",
									"",
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246X86Q8IJ9</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>0</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE007 -> IE025 -> IE045",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/645112c381e2a404/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"645112c381e2a404",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET ALL IE007 -> IE025 -> IE045 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/645112c381e2a404/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"645112c381e2a404",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "(XI)32 - Simplified Arrivals",
			"item": [
				{
					"name": "01- POST IE015 Simplified 142",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"var LRN=\"TRATESTGB32\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBDEPAUTH001</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB954131533000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>09GB0000010000066</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET IE007 -> IE043 142",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644e41ad7e5fa42e/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644e41ad7e5fa42e",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET IE007 -> IE043 142 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/6452818c7dd0387c/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"6452818c7dd0387c",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET IE007 -> IE043 142 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/6452818c7dd0387c/messages/6452818edf284e15",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"6452818c7dd0387c",
								"messages",
								"6452818edf284e15"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE007 Simplified 81",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var arrivalId =  jsonData._links.self.href.split(\"/\")[5]",
									"",
									"pm.environment.set(\"arrivalId\",arrivalId);",
									"",
									"",
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246XPV7S3J7</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIDESAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET IE007 -> IE043",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/644e428f0adb22ef/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"644e428f0adb22ef",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET IE007 -> IE043 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/645282644bdfa80c/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"645282644bdfa80c",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "06- IE044 (Unloading Remarks)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let moment = require('moment')",
									"let today = moment();",
									"",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
									"",
									"pm.collectionVariables.set(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true,
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC044C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN>23GB000246HFIGZRJ1</MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>    \n</ncts:CC044C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "07- GET ALL IE007 →IE043→  IE044 → IE025 → IE045",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/64522fd2767a78ee/messages/645230919b9bed33",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"64522fd2767a78ee",
								"messages",
								"645230919b9bed33"
							]
						}
					},
					"response": []
				},
				{
					"name": "07- GET ALL IE007 →IE043→  IE044 → IE025 → IE045 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/64522fd2767a78ee/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"64522fd2767a78ee",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "(TBD)(XI)33 - Simplified arrivals Unloading remarks accepted/rejected",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"var LRN=\"TRATESTGB33\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBDEPAUTH001</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB954131533000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>09GB0000010000084</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>1000.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 → IE028 → IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE007 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var arrivalId =  jsonData._links.self.href.split(\"/\")[5]",
									"",
									"pm.environment.set(\"arrivalId\",arrivalId);",
									"",
									"",
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN></MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIDESAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET IE007 -> IE043",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "06- Incorrect Date IE044 (Unloading Remarks)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment')",
									"let yesterday = moment();",
									"yesterday.subtract(1, 'days');",
									"",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
									"",
									"pm.collectionVariables.set(\"unloadingDate\", yesterday.format(\"YYYY-MM-DD\"))",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true,
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC044C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN></MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>IncorrectDate</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>    \n</ncts:CC044C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "07- GET IE007 →IE043→  IE044→ IE057",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "08- VALID IE044 (Unloading Remarks)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment')",
									"let today = moment();",
									"",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
									"",
									"pm.collectionVariables.set(\"unloadingDate\", today.format(\"YYYY-MM-DD\"))",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true,
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC044C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n   <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC044C</messageType>\n    <TransitOperation>\n        <MRN></MRN>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>1</conform>\n        <unloadingCompletion>1</unloadingCompletion>\n        <unloadingDate>{{unloadingDate}}</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n    </UnloadingRemark>    \n</ncts:CC044C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "09- GET messages IE007 →IE043→  IE044→ IE057 → IE044 → IE025 →  IE045",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "(TBD)(XI)34 - Simplified Departure with Rejection of the Arrival Notification",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"var LRN=\"TRATESTGB34\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>GBDEPAUTH001</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB954131533000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>09GB0000010000084</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>GB DEP E20 1HZ</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Wheat</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>1000.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05 - GET ALL IE015 → IE928 →IE028→IE029 →IE009",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05 - GET ALL IE015 → IE928 →IE028→IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/64527e2481ac7b28/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"64527e2481ac7b28",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05 - GET ALL IE015 → IE928 →IE028→IE029 →IE009 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/64527e2481ac7b28/messages/64527e278b317b5c",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"64527e2481ac7b28",
								"messages",
								"64527e278b317b5c"
							]
						}
					},
					"response": []
				},
				{
					"name": "04 Incorrect Authorisation number - POST IE007",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var arrivalId =  jsonData._links.self.href.split(\"/\")[5]",
									"",
									"pm.environment.set(\"arrivalId\",arrivalId);",
									"",
									"",
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>23GB0002466OOPNOJ0</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>1</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C522</type>\n        <referenceNumber>XIDESAUTH000</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DES BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET IE007 -> IE057",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"customs",
								"transits",
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET IE007 -> IE057 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/64527eff4eb4dc6c/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"64527eff4eb4dc6c",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "(TBD)(XI)35 - Normal Departure with Rejection of the Arrival Notification",
			"item": [
				{
					"name": "01- POST IE015 Normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"var LRN=\"TRATESTGB35\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>GB000246</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>XI000142</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>GB954131533000</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>09GB0000010000084</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>100.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBDVR</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>GB</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>GB</country>\n            <location>Dover</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Cane Sugar</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>1000.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>10</numberOfPackages>\n                    <shippingMarks>Cane Sugar Cartons</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseURL}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "05 - GET ALL IE015 → IE928 →IE028→IE029 →IE009",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{deptId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{deptId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "06- POST IE007 Incorrect MRN",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"requestDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"decisionDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var arrivalId =  jsonData._links.self.href.split(\"/\")[5]",
									"",
									"pm.environment.set(\"arrivalId\",arrivalId);",
									"",
									"",
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC007C</messageType>\n    <TransitOperation>\n        <MRN>INcorrectMRN</MRN>\n        <arrivalNotificationDateAndTime>{{arrivalNotificationDateAndTime}}</arrivalNotificationDateAndTime>\n        <simplifiedProcedure>0</simplifiedProcedure>\n        <incidentFlag>0</incidentFlag>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </TraderAtDestination>\n    <Consignment>\n       <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n       </LocationOfGoods>\n    </Consignment>\n</ncts:CC007C>"
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals"
							]
						}
					},
					"response": []
				},
				{
					"name": "07 - GET IE007 -> IE057",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "07 - GET IE007 -> IE057 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "(TBD)36 - Simplified Departure with Major discrepancies resolved",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('2', 'days');",
									"",
									"",
									"let date1 = moment();",
									"date1.add('8', 'days');",
									"",
									"var text=\"TRATESTDEC1\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"text += charset;",
									"console.log (\"Text value is \"+text)",
									"",
									"",
									"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
									"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
									"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
									"",
									"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
									"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
									"pm.collectionVariables.set(\"RefNumHEA4\",text)",
									"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var depId =  jsonData._links.self.href",
									"depId = depId.split(\"/\")[5]",
									"pm.environment.set(\"deptId\",depId);",
									"console.log(\"department id is \"+depId)",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>XI933000</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>2023-04-26T07:36:28</preparationDateAndTime>\n    <messageIdentification>1</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>EIDITH</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>2023-05-09</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>2023-05-10T07:36:28</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI954131533000</identificationNumber>\n        <name>XI E2E TTHolder</name>\n        <Address>\n            <streetAndNumber>Custom House, Custom Square</streetAndNumber>\n            <postcode>BT1 3ET</postcode>\n            <city>Belfast</city>\n            <country>XI</country>\n        </Address>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>10000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n            <name>XI E2E TT</name>\n            <Address>\n                <streetAndNumber>Custom House, Custom Square</streetAndNumber>\n                <postcode>BT1 3ET</postcode>\n                <city>Belfast</city>\n                <country>XI</country>\n            </Address>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n            <name>GB E2E TT</name>\n            <Address>\n                <streetAndNumber>14 Westfield Avenue</streetAndNumber>\n                <postcode>E20 1HZ</postcode>\n                <city>Stratford, London</city>\n                <country>GB</country>\n            </Address>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <countryOfDispatch>XI</countryOfDispatch>\n            <grossMass>1000.000000000000</grossMass>\n            <referenceNumberUCR>string</referenceNumberUCR>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>1000.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{deptId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{deptId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 → IE928 →IE028→IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{deptId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{deptId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE007 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var loc = postman.getResponseHeader(\"Location\").toString();",
									"",
									"var arrivalId = loc.split(\"/\")[5];",
									"pm.environment.set(\"arrivalId\",arrivalId);",
									"",
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n  <messageSender>9999912345</messageSender>\n  <messageRecipient>NCTS</messageRecipient>\n  <preparationDateAndTime>2023-01-26T07:36:28</preparationDateAndTime>\n  <messageIdentification>1</messageIdentification>\n  <messageType>CC007C</messageType>\n  <TransitOperation>\n    <MRN>IncorrectMRN</MRN>\n    <arrivalNotificationDateAndTime>2023-03-23T11:11:04</arrivalNotificationDateAndTime>\n    <simplifiedProcedure>0</simplifiedProcedure>\n    <incidentFlag>0</incidentFlag>\n  </TransitOperation>\n  <CustomsOfficeOfDestinationActual>\n    <referenceNumber>XI000142</referenceNumber>\n  </CustomsOfficeOfDestinationActual>\n  <TraderAtDestination>\n    <identificationNumber>XI175521246821</identificationNumber> \n  </TraderAtDestination>\n  <Consignment>\n    <LocationOfGoods>\n      <typeOfLocation>C</typeOfLocation>\n      <qualifierOfIdentification>U</qualifierOfIdentification>     \n      <UNLocode>GB BEL</UNLocode>\n       </LocationOfGoods>\n  </Consignment>\n</ncts:CC007C>"
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET IE007 -> IE043",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "06- VALID IE044 (Unloading Remarks)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"pm.test(\"Validate location\", function () {",
									"    var arr_location = postman.getResponseHeader(\"Location\").toString();",
									"});",
									"",
									"var loc = postman.getResponseHeader(\"Location\").toString();",
									"tests[loc] = loc;",
									"var messageId = loc.split(\"/\")[7];",
									"pm.environment.set(\"messageId\",messageId);",
									"console.log(\"message id is \"+messageId)",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment')",
									"let yesterday = moment();",
									"yesterday.subtract(1, 'days');",
									"",
									"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
									"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
									"",
									"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
									"pm.collectionVariables.set(\"UnlDatREM67\", moment().format(\"YYYYMMDD\"))",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true,
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC044C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageRecipient>token</messageRecipient>\n    <preparationDateAndTime>2007-10-26T07:36:28</preparationDateAndTime>\n    <messageIdentification>token</messageIdentification>\n    <messageType>CC044C</messageType>\n    <correlationIdentifier>token</correlationIdentifier>\n    <TransitOperation>\n        <MRN>string</MRN>\n        <otherThingsToReport>string</otherThingsToReport>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>XI000142</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>XI175521246821</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>0</conform>\n        <unloadingCompletion>0</unloadingCompletion>\n        <unloadingDate>2018-11-01+00:00</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n        <unloadingRemark>string</unloadingRemark>\n    </UnloadingRemark>\n    <Consignment>\n        <grossMass>1000.000000000000</grossMass>\n        <TransportEquipment>\n            <sequenceNumber>token</sequenceNumber>\n            <containerIdentificationNumber>string</containerIdentificationNumber>\n            <numberOfSeals>100</numberOfSeals>\n            <Seal>\n                <sequenceNumber>token</sequenceNumber>\n                <identifier>string</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>token</sequenceNumber>\n                <declarationGoodsItemNumber>100</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <DepartureTransportMeans>\n            <sequenceNumber>token</sequenceNumber>\n            <typeOfIdentification>token</typeOfIdentification>\n            <identificationNumber>string</identificationNumber>\n            <nationality>st</nationality>\n        </DepartureTransportMeans>\n        <SupportingDocument>\n            <sequenceNumber>token</sequenceNumber>\n            <type>token</type>\n            <referenceNumber>string</referenceNumber>\n            <complementOfInformation>string</complementOfInformation>\n        </SupportingDocument>\n        <TransportDocument>\n            <sequenceNumber>token</sequenceNumber>\n            <type>token</type>\n            <referenceNumber>string</referenceNumber>\n        </TransportDocument>\n        <AdditionalReference>\n            <sequenceNumber>token</sequenceNumber>\n            <type>token</type>\n            <referenceNumber>string</referenceNumber>\n        </AdditionalReference>\n        <HouseConsignment>\n            <sequenceNumber>token</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <DepartureTransportMeans>\n                <sequenceNumber>token</sequenceNumber>\n                <typeOfIdentification>token</typeOfIdentification>\n                <identificationNumber>string</identificationNumber>\n                <nationality>st</nationality>\n            </DepartureTransportMeans>\n            <SupportingDocument>\n                <sequenceNumber>token</sequenceNumber>\n                <type>token</type>\n                <referenceNumber>string</referenceNumber>\n                <complementOfInformation>string</complementOfInformation>\n            </SupportingDocument>\n            <TransportDocument>\n                <sequenceNumber>token</sequenceNumber>\n                <type>token</type>\n                <referenceNumber>string</referenceNumber>\n            </TransportDocument>\n            <AdditionalReference>\n                <sequenceNumber>token</sequenceNumber>\n                <type>token</type>\n                <referenceNumber>string</referenceNumber>\n            </AdditionalReference>\n            <ConsignmentItem>\n                <goodsItemNumber>token</goodsItemNumber>\n                <declarationGoodsItemNumber>100</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>string</descriptionOfGoods>\n                    <cusCode>token</cusCode>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>token</harmonizedSystemSubHeadingCode>\n                        <combinedNomenclatureCode>st</combinedNomenclatureCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>1000.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>token</sequenceNumber>\n                    <typeOfPackages>token</typeOfPackages>\n                    <numberOfPackages>100</numberOfPackages>\n                    <shippingMarks>string</shippingMarks>\n                </Packaging>\n                <SupportingDocument>\n                    <sequenceNumber>token</sequenceNumber>\n                    <type>token</type>\n                    <referenceNumber>string</referenceNumber>\n                    <complementOfInformation>string</complementOfInformation>\n                </SupportingDocument>\n                <TransportDocument>\n                    <sequenceNumber>token</sequenceNumber>\n                    <type>token</type>\n                    <referenceNumber>string</referenceNumber>\n                </TransportDocument>\n                <AdditionalReference>\n                    <sequenceNumber>token</sequenceNumber>\n                    <type>token</type>\n                    <referenceNumber>string</referenceNumber>\n                </AdditionalReference>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC044C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"customs",
								"transits",
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "07- GET IE007 -> IE043 -> IE044 ->IE025 → IE019 → IE025 → IE045",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "(TBD)37 - Simplified Departure Major discrepancies confirmed",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('2', 'days');",
									"",
									"",
									"let date1 = moment();",
									"date1.add('8', 'days');",
									"",
									"var text=\"TRATESTDEC1\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"text += charset;",
									"console.log (\"Text value is \"+text)",
									"",
									"",
									"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
									"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
									"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
									"",
									"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
									"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
									"pm.collectionVariables.set(\"RefNumHEA4\",text)",
									"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var depId =  jsonData._links.self.href",
									"depId = depId.split(\"/\")[5]",
									"pm.environment.set(\"deptId\",depId);",
									"console.log(\"department id is \"+depId)",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>XI933000</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>2023-04-26T07:36:28</preparationDateAndTime>\n    <messageIdentification>1</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>EIDITH</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>2023-05-09</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>string</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>2023-05-10T07:36:28</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI954131533000</identificationNumber>\n        <name>XI E2E TTHolder</name>\n        <Address>\n            <streetAndNumber>Custom House, Custom Square</streetAndNumber>\n            <postcode>BT1 3ET</postcode>\n            <city>Belfast</city>\n            <country>XI</country>\n        </Address>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>09GB00000100000M0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>10000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>string</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB954131533000</identificationNumber>\n            <name>XI E2E TT</name>\n            <Address>\n                <streetAndNumber>Custom House, Custom Square</streetAndNumber>\n                <postcode>BT1 3ET</postcode>\n                <city>Belfast</city>\n                <country>XI</country>\n            </Address>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI954131533000</identificationNumber>\n            <name>GB E2E TT</name>\n            <Address>\n                <streetAndNumber>14 Westfield Avenue</streetAndNumber>\n                <postcode>E20 1HZ</postcode>\n                <city>Stratford, London</city>\n                <country>GB</country>\n            </Address>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <countryOfDispatch>XI</countryOfDispatch>\n            <grossMass>1000.000000000000</grossMass>\n            <referenceNumberUCR>string</referenceNumberUCR>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>010129</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>1000.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{deptId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{deptId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{deptId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{deptId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE007",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var loc = postman.getResponseHeader(\"Location\").toString();",
									"",
									"var arrivalId = loc.split(\"/\")[5];",
									"pm.environment.set(\"arrivalId\",arrivalId);",
									"",
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n  <messageRecipient>token</messageRecipient>\n  <preparationDateAndTime>2007-10-26T07:36:28</preparationDateAndTime>\n  <messageIdentification>token</messageIdentification>\n  <messageType>CC007C</messageType>\n  <correlationIdentifier>token</correlationIdentifier>\n  <TransitOperation>\n    <MRN>string</MRN>\n    <arrivalNotificationDateAndTime>2014-06-09T16:15:04+01:00</arrivalNotificationDateAndTime>\n    <simplifiedProcedure>1</simplifiedProcedure>\n    <incidentFlag>1</incidentFlag>\n  </TransitOperation>\n  <Authorisation>\n    <sequenceNumber>token</sequenceNumber>\n    <type>token</type>\n    <referenceNumber>string</referenceNumber>\n  </Authorisation>\n  <CustomsOfficeOfDestinationActual>\n    <referenceNumber>stringst</referenceNumber>\n  </CustomsOfficeOfDestinationActual>\n  <TraderAtDestination>\n    <identificationNumber>string</identificationNumber> \n    <communicationLanguageAtDestination>token</communicationLanguageAtDestination>\n  </TraderAtDestination>\n  <Consignment>\n    <LocationOfGoods>\n      <typeOfLocation>token</typeOfLocation>\n      <qualifierOfIdentification>token</qualifierOfIdentification>   \n      <authorisationNumber>string</authorisationNumber>   \n      <additionalIdentifier>stri</additionalIdentifier>   \n      <UNLocode>token</UNLocode>   \n      <CustomsOffice>\n        <referenceNumber>stringst</referenceNumber>\n      </CustomsOffice>   \n      <GNSS>\n        <latitude>string</latitude>\n        <longitude>string</longitude>\n      </GNSS>   \n      <EconomicOperator>\n        <identificationNumber>string</identificationNumber>\n      </EconomicOperator>   \n      <Address>\n        <streetAndNumber>string</streetAndNumber>     \n        <postcode>string</postcode>\n        <city>string</city>\n        <country>st</country>\n      </Address>   \n      <PostcodeAddress>     \n        <houseNumber>string</houseNumber>\n        <postcode>string</postcode>\n        <country>st</country>\n      </PostcodeAddress>   \n      <ContactPerson>\n        <name>string</name>\n        <phoneNumber>token</phoneNumber>     \n        <eMailAddress>string</eMailAddress>\n      </ContactPerson>\n    </LocationOfGoods>\n    <Incident>\n      <sequenceNumber>token</sequenceNumber>\n      <code>token</code>\n      <text>string</text>   \n      <Endorsement>\n        <date>2013-05-22+01:00</date>\n        <authority>string</authority>\n        <place>string</place>\n        <country>st</country>\n      </Endorsement>\n      <Location>\n        <qualifierOfIdentification>token</qualifierOfIdentification>     \n        <UNLocode>token</UNLocode>\n        <country>st</country>     \n        <GNSS>\n          <latitude>string</latitude>\n          <longitude>string</longitude>\n        </GNSS>\n          <Address>\n          <streetAndNumber>string</streetAndNumber>       \n          <postcode>string</postcode>\n          <city>string</city>\n        </Address>\n      </Location>    \n      <TransportEquipment>\n        <sequenceNumber>token</sequenceNumber>     \n        <containerIdentificationNumber>string</containerIdentificationNumber>     \n        <numberOfSeals>100</numberOfSeals>       \n        <Seal>\n          <sequenceNumber>token</sequenceNumber>\n          <identifier>string</identifier>\n        </Seal>\n          <GoodsReference>\n          <sequenceNumber>token</sequenceNumber>\n          <declarationGoodsItemNumber>100</declarationGoodsItemNumber>\n        </GoodsReference>\n      </TransportEquipment>   \n      <Transhipment>\n        <containerIndicator>0</containerIndicator>\n        <TransportMeans>\n          <typeOfIdentification>token</typeOfIdentification>\n          <identificationNumber>string</identificationNumber>\n          <nationality>st</nationality>\n        </TransportMeans>\n      </Transhipment>\n    </Incident>\n  </Consignment>\n</ncts:CC007C>"
						},
						"url": {
							"raw": "{{baseURL}}/customs/transits/movements/arrivals",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"customs",
								"transits",
								"movements",
								"arrivals"
							]
						}
					},
					"response": []
				},
				{
					"name": "05- GET IE007 -> IE043",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "06- VALID IE044 (Unloading Remarks)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"pm.test(\"Validate location\", function () {",
									"    var arr_location = postman.getResponseHeader(\"Location\").toString();",
									"});",
									"",
									"var loc = postman.getResponseHeader(\"Location\").toString();",
									"tests[loc] = loc;",
									"var messageId = loc.split(\"/\")[7];",
									"pm.environment.set(\"messageId\",messageId);",
									"console.log(\"message id is \"+messageId)",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment')",
									"let yesterday = moment();",
									"yesterday.subtract(1, 'days');",
									"",
									"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
									"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
									"",
									"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
									"pm.collectionVariables.set(\"UnlDatREM67\", moment().format(\"YYYYMMDD\"))",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true,
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC044C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageRecipient>token</messageRecipient>\n    <preparationDateAndTime>2007-10-26T07:36:28</preparationDateAndTime>\n    <messageIdentification>token</messageIdentification>\n    <messageType>CC044C</messageType>\n    <correlationIdentifier>token</correlationIdentifier>\n    <TransitOperation>\n        <MRN>string</MRN>\n        <otherThingsToReport>string</otherThingsToReport>\n    </TransitOperation>\n    <CustomsOfficeOfDestinationActual>\n        <referenceNumber>stringst</referenceNumber>\n    </CustomsOfficeOfDestinationActual>\n    <TraderAtDestination>\n        <identificationNumber>string</identificationNumber>\n    </TraderAtDestination>\n    <UnloadingRemark>\n        <conform>0</conform>\n        <unloadingCompletion>0</unloadingCompletion>\n        <unloadingDate>2018-11-01+00:00</unloadingDate>\n        <stateOfSeals>0</stateOfSeals>\n        <unloadingRemark>string</unloadingRemark>\n    </UnloadingRemark>\n    <Consignment>\n        <grossMass>1000.000000000000</grossMass>\n        <TransportEquipment>\n            <sequenceNumber>token</sequenceNumber>\n            <containerIdentificationNumber>string</containerIdentificationNumber>\n            <numberOfSeals>100</numberOfSeals>\n            <Seal>\n                <sequenceNumber>token</sequenceNumber>\n                <identifier>string</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>token</sequenceNumber>\n                <declarationGoodsItemNumber>100</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <DepartureTransportMeans>\n            <sequenceNumber>token</sequenceNumber>\n            <typeOfIdentification>token</typeOfIdentification>\n            <identificationNumber>string</identificationNumber>\n            <nationality>st</nationality>\n        </DepartureTransportMeans>\n        <SupportingDocument>\n            <sequenceNumber>token</sequenceNumber>\n            <type>token</type>\n            <referenceNumber>string</referenceNumber>\n            <complementOfInformation>string</complementOfInformation>\n        </SupportingDocument>\n        <TransportDocument>\n            <sequenceNumber>token</sequenceNumber>\n            <type>token</type>\n            <referenceNumber>string</referenceNumber>\n        </TransportDocument>\n        <AdditionalReference>\n            <sequenceNumber>token</sequenceNumber>\n            <type>token</type>\n            <referenceNumber>string</referenceNumber>\n        </AdditionalReference>\n        <HouseConsignment>\n            <sequenceNumber>token</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <DepartureTransportMeans>\n                <sequenceNumber>token</sequenceNumber>\n                <typeOfIdentification>token</typeOfIdentification>\n                <identificationNumber>string</identificationNumber>\n                <nationality>st</nationality>\n            </DepartureTransportMeans>\n            <SupportingDocument>\n                <sequenceNumber>token</sequenceNumber>\n                <type>token</type>\n                <referenceNumber>string</referenceNumber>\n                <complementOfInformation>string</complementOfInformation>\n            </SupportingDocument>\n            <TransportDocument>\n                <sequenceNumber>token</sequenceNumber>\n                <type>token</type>\n                <referenceNumber>string</referenceNumber>\n            </TransportDocument>\n            <AdditionalReference>\n                <sequenceNumber>token</sequenceNumber>\n                <type>token</type>\n                <referenceNumber>string</referenceNumber>\n            </AdditionalReference>\n            <ConsignmentItem>\n                <goodsItemNumber>token</goodsItemNumber>\n                <declarationGoodsItemNumber>100</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>string</descriptionOfGoods>\n                    <cusCode>token</cusCode>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>token</harmonizedSystemSubHeadingCode>\n                        <combinedNomenclatureCode>st</combinedNomenclatureCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>1000.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>token</sequenceNumber>\n                    <typeOfPackages>token</typeOfPackages>\n                    <numberOfPackages>100</numberOfPackages>\n                    <shippingMarks>string</shippingMarks>\n                </Packaging>\n                <SupportingDocument>\n                    <sequenceNumber>token</sequenceNumber>\n                    <type>token</type>\n                    <referenceNumber>string</referenceNumber>\n                    <complementOfInformation>string</complementOfInformation>\n                </SupportingDocument>\n                <TransportDocument>\n                    <sequenceNumber>token</sequenceNumber>\n                    <type>token</type>\n                    <referenceNumber>string</referenceNumber>\n                </TransportDocument>\n                <AdditionalReference>\n                    <sequenceNumber>token</sequenceNumber>\n                    <type>token</type>\n                    <referenceNumber>string</referenceNumber>\n                </AdditionalReference>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC044C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"customs",
								"transits",
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "07- GET IE007 -> IE043 -> IE044 ->IE025 → IE019 → IE025 → IE045",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all arrival must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals/{{arrivalId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals",
								"{{arrivalId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "(TIR)38 - Simplified Departure Single House Consignment",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>TIR</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <TIRCarnetNumber>XN25000050</TIRCarnetNumber>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n        <TIRHolderIdentificationNumber>DK222222222</TIRHolderIdentificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>B</guaranteeType>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE056",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE056 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644cf2e54555280b/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644cf2e54555280b",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE056 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644cf2e54555280b/messages/644cf2e965798a18",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644cf2e54555280b",
								"messages",
								"644cf2e965798a18"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "(TIR)39 - Normal Departure Single House Consignment",
			"item": [
				{
					"name": "01- POST IE015 Normal XI to XI",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>TIR</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <TIRCarnetNumber>XN25000050</TIRCarnetNumber>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n    </TransitOperation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>XI005160</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n        <TIRHolderIdentificationNumber>DK222222222</TIRHolderIdentificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>B</guaranteeType>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>XI</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>C</typeOfLocation>\n            <qualifierOfIdentification>U</qualifierOfIdentification>\n            <UNLocode>GBBEL</UNLocode>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>950.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644cf58cdf88cc57/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644cf58cdf88cc57",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029 Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/644cf58cdf88cc57/messages/644cf58f8df11dfc",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"644cf58cdf88cc57",
								"messages",
								"644cf58f8df11dfc"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "(TBD)40 - Simpified Departure",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('2', 'days');",
									"",
									"",
									"let date1 = moment();",
									"date1.add('8', 'days');",
									"",
									"var text=\"TRATESTDEC1\";",
									"var charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"text += charset;",
									"console.log (\"Text value is \"+text)",
									"",
									"",
									"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
									"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
									"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
									"",
									"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
									"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
									"pm.collectionVariables.set(\"RefNumHEA4\",text)",
									"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var depId =  jsonData._links.self.href",
									"depId = depId.split(\"/\")[5]",
									"pm.environment.set(\"deptId\",depId);",
									"console.log(\"department id is \"+depId)",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>XI933000</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>2023-04-26T07:36:28</preparationDateAndTime>\n    <messageIdentification>1</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>EIDITH</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>2023-05-09</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>string</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>2023-05-10T07:36:28</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI954131533000</identificationNumber>\n        <name>XI E2E TTHolder</name>\n        <Address>\n            <streetAndNumber>Custom House, Custom Square</streetAndNumber>\n            <postcode>BT1 3ET</postcode>\n            <city>Belfast</city>\n            <country>XI</country>\n        </Address>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>09GB00000100000M0</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>10000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDispatch>XI</countryOfDispatch>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>string</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>GB954131533000</identificationNumber>\n            <name>XI E2E TT</name>\n            <Address>\n                <streetAndNumber>Custom House, Custom Square</streetAndNumber>\n                <postcode>BT1 3ET</postcode>\n                <city>Belfast</city>\n                <country>XI</country>\n            </Address>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>XI954131533000</identificationNumber>\n            <name>GB E2E TT</name>\n            <Address>\n                <streetAndNumber>14 Westfield Avenue</streetAndNumber>\n                <postcode>E20 1HZ</postcode>\n                <city>Stratford, London</city>\n                <country>GB</country>\n            </Address>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n            <GoodsReference>\n                <sequenceNumber>1</sequenceNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n            </GoodsReference>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>Belfast</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <countryOfDispatch>XI</countryOfDispatch>\n            <grossMass>1000.000000000000</grossMass>\n            <referenceNumberUCR>string</referenceNumberUCR>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>010129</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>1000.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{deptId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{deptId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE007 Simplified Only Nipuls Data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"POST IE007 must return status code 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var arrivalId = jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"arrivalId\", arrivalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n  <messageSender>E2E TT</messageSender>\n  <messageRecipient>NCTS</messageRecipient>\n  <preparationDateAndTime>2023-01-26T07:36:28</preparationDateAndTime>\n  <messageIdentification>1</messageIdentification>\n  <messageType>CC007C</messageType>\n  <TransitOperation>\n    <MRN>27ITD9BRA9397FGCJ9</MRN>\n    <arrivalNotificationDateAndTime>2023-03-23T11:11:04</arrivalNotificationDateAndTime>\n    <simplifiedProcedure>1</simplifiedProcedure>\n    <incidentFlag>0</incidentFlag>\n  </TransitOperation>\n  <Authorisation>\n    <sequenceNumber>1</sequenceNumber>\n    <type>C522</type>\n    <referenceNumber>AN35</referenceNumber>\n  </Authorisation>\n  <CustomsOfficeOfDestinationActual>\n    <referenceNumber>XI000142</referenceNumber>\n  </CustomsOfficeOfDestinationActual>\n  <TraderAtDestination>\n    <identificationNumber>21XI000060170D874</identificationNumber>\n  </TraderAtDestination>\n  <Consignment>\n    <LocationOfGoods>\n      <typeOfLocation>B</typeOfLocation>\n      <qualifierOfIdentification>Y</qualifierOfIdentification>\n      <UNLocode>CABFF</UNLocode>\n       </LocationOfGoods>\n  </Consignment>\n</ncts:CC007C>"
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{deptId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{deptId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "(TBD)41 - Simpified Incident  on Arrivals",
			"item": [
				{
					"name": "01- POST IE015 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"let now = moment();",
									"now.add('14', 'days');",
									"",
									"let limitDate = now.format(\"YYYY-MM-DD\")",
									"",
									"let arrivalTime = moment();",
									"arrivalTime.add('14', 'days');",
									"",
									"let LRN=\"TRATESTXI1\";",
									"let charset = moment().format(\"YYMMDDHHmm\");",
									"",
									"LRN += charset;",
									"",
									"pm.collectionVariables.set(\"LRN\", LRN);",
									"pm.collectionVariables.set(\"limitDate\", limitDate);",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalTime\", arrivalTime.format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var departureId =  jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"departureId\",departureId);",
									"",
									"pm.test(\"POST IE015 must return response code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"if (pm.response.code !== 202) {",
									"    return;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC015C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n    <messageSender>9999912345</messageSender>\n    <messageRecipient>NCTS</messageRecipient>\n    <preparationDateAndTime>{{preparationDateAndTime}}</preparationDateAndTime>\n    <messageIdentification>{{messageIdentification}}</messageIdentification>\n    <messageType>CC015C</messageType>\n    <TransitOperation>\n        <LRN>{{LRN}}</LRN>\n        <declarationType>T1</declarationType>\n        <additionalDeclarationType>A</additionalDeclarationType>\n        <security>0</security>\n        <reducedDatasetIndicator>0</reducedDatasetIndicator>\n        <bindingItinerary>0</bindingItinerary>\n        <limitDate>{{limitDate}}</limitDate>\n    </TransitOperation>\n    <Authorisation>\n        <sequenceNumber>1</sequenceNumber>\n        <type>C521</type>\n        <referenceNumber>XIDEPAUTH002</referenceNumber>\n    </Authorisation>\n    <CustomsOfficeOfDeparture>\n        <referenceNumber>XI000081</referenceNumber>\n    </CustomsOfficeOfDeparture>\n    <CustomsOfficeOfDestinationDeclared>\n        <referenceNumber>GB000060</referenceNumber>\n    </CustomsOfficeOfDestinationDeclared>\n    <CustomsOfficeOfTransitDeclared>\n        <sequenceNumber>1</sequenceNumber>\n        <referenceNumber>GB000060</referenceNumber>\n        <arrivalDateAndTimeEstimated>{{arrivalTime}}</arrivalDateAndTimeEstimated>\n    </CustomsOfficeOfTransitDeclared>\n    <HolderOfTheTransitProcedure>\n        <identificationNumber>XI985524247819</identificationNumber>\n    </HolderOfTheTransitProcedure>\n    <Guarantee>\n        <sequenceNumber>1</sequenceNumber>\n        <guaranteeType>1</guaranteeType>\n        <GuaranteeReference>\n            <sequenceNumber>1</sequenceNumber>\n            <GRN>20XI0000010000052</GRN>\n            <accessCode>AC01</accessCode>\n            <amountToBeCovered>10000.000000000000</amountToBeCovered>\n            <currency>GBP</currency>\n        </GuaranteeReference>\n    </Guarantee>\n    <Consignment>\n        <countryOfDestination>GB</countryOfDestination>\n        <containerIndicator>1</containerIndicator>\n        <grossMass>1000.000000000000</grossMass>\n        <referenceNumberUCR>AB1234</referenceNumberUCR>\n        <Consignor>\n            <identificationNumber>XI985524247819</identificationNumber>\n        </Consignor>\n        <Consignee>\n            <identificationNumber>GB954131533000</identificationNumber>\n        </Consignee>\n        <TransportEquipment>\n            <sequenceNumber>1</sequenceNumber>\n            <containerIdentificationNumber>WGPCGR</containerIdentificationNumber>\n            <numberOfSeals>1</numberOfSeals>\n            <Seal>\n                <sequenceNumber>1</sequenceNumber>\n                <identifier>1234</identifier>\n            </Seal>\n        </TransportEquipment>\n        <LocationOfGoods>\n            <typeOfLocation>B</typeOfLocation>\n            <qualifierOfIdentification>Y</qualifierOfIdentification>\n            <authorisationNumber>XI DEP BT1 3ET</authorisationNumber>\n        </LocationOfGoods>\n        <DepartureTransportMeans>\n            <sequenceNumber>1</sequenceNumber>\n            <typeOfIdentification>30</typeOfIdentification>\n            <identificationNumber>NC15REG</identificationNumber>\n            <nationality>XI</nationality>\n        </DepartureTransportMeans>\n        <PlaceOfLoading>\n            <country>XI</country>\n            <location>GBBEL</location>\n        </PlaceOfLoading>\n        <HouseConsignment>\n            <sequenceNumber>1</sequenceNumber>\n            <grossMass>1000.000000000000</grossMass>\n            <ConsignmentItem>\n                <goodsItemNumber>1</goodsItemNumber>\n                <declarationGoodsItemNumber>1</declarationGoodsItemNumber>\n                <Commodity>\n                    <descriptionOfGoods>Radioactive Spiders</descriptionOfGoods>\n                    <CommodityCode>\n                        <harmonizedSystemSubHeadingCode>392690</harmonizedSystemSubHeadingCode>\n                    </CommodityCode>\n                    <GoodsMeasure>\n                        <grossMass>1000.000000000000</grossMass>\n                        <netMass>1000.000000000000</netMass>\n                    </GoodsMeasure>\n                </Commodity>\n                <Packaging>\n                    <sequenceNumber>1</sequenceNumber>\n                    <typeOfPackages>BX</typeOfPackages>\n                    <numberOfPackages>1</numberOfPackages>\n                    <shippingMarks>XI Box goods to be shipped</shippingMarks>\n                </Packaging>\n            </ConsignmentItem>\n        </HouseConsignment>\n    </Consignment>\n</ncts:CC015C>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "02- GET IE015 dept Id Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{departureId}}/messages/6448e6c83c5873de",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{departureId}}",
								"messages",
								"6448e6c83c5873de"
							]
						}
					},
					"response": []
				},
				{
					"name": "04- POST IE007 Simplified",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"preparationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"arrivalNotificationDateAndTime\", moment().format(\"YYYY-MM-DDThh:mm:ss\"));",
									"pm.collectionVariables.set(\"messageIdentification\",_.random(11190913102542,55190913102542))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"POST IE007 must return status code 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var arrivalId = jsonData._links.self.href.split(\"/\")[5]",
									"pm.environment.set(\"arrivalId\", arrivalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept",
								"value": "application/vnd.hmrc.2.0+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ncts:CC007C PhaseID=\"NCTS5.0\" xmlns:ncts=\"http://ncts.dgtaxud.ec\">\n  <messageSender>E2E TT</messageSender>\n  <messageRecipient>NCTS</messageRecipient>\n  <preparationDateAndTime>2023-01-26T07:36:28</preparationDateAndTime>\n  <messageIdentification>1</messageIdentification>\n  <messageType>CC007C</messageType>\n  <TransitOperation>\n    <MRN>27ITD9BRA9397FGCJ9</MRN>\n    <arrivalNotificationDateAndTime>2023-03-23T11:11:04</arrivalNotificationDateAndTime>\n    <simplifiedProcedure>1</simplifiedProcedure>\n    <incidentFlag>0</incidentFlag>\n  </TransitOperation>\n  <Authorisation>\n    <sequenceNumber>1</sequenceNumber>\n    <type>C522</type>\n    <referenceNumber>AN35</referenceNumber>\n  </Authorisation>\n  <CustomsOfficeOfDestinationActual>\n    <referenceNumber>XI000142</referenceNumber>\n  </CustomsOfficeOfDestinationActual>\n  <TraderAtDestination>\n    <identificationNumber>21XI000060170D874</identificationNumber>\n  </TraderAtDestination>\n  <Consignment>\n    <LocationOfGoods>\n      <typeOfLocation>B</typeOfLocation>\n      <qualifierOfIdentification>Y</qualifierOfIdentification>\n      <UNLocode>CABFF</UNLocode>\n       </LocationOfGoods>\n  </Consignment>\n</ncts:CC007C>"
						},
						"url": {
							"raw": "{{baseUrlContext}}/movements/arrivals",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"arrivals"
							]
						}
					},
					"response": []
				},
				{
					"name": "03- GET ALL IE015 > IE928 -> IE028 -> IE029 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all messages must return status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if (pm.response.code !== 200) {",
									"    return;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.hmrc.2.0+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrlContext}}/movements/departures/{{deptId}}/messages",
							"host": [
								"{{baseUrlContext}}"
							],
							"path": [
								"movements",
								"departures",
								"{{deptId}}",
								"messages"
							]
						}
					},
					"response": []
				}
			],
			"description": "IE015 > IE016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "DatOfPreMES9",
			"value": ""
		},
		{
			"key": "TimOfPreMES10",
			"value": ""
		},
		{
			"key": "DecDatHEA383",
			"value": ""
		},
		{
			"key": "ArrTimTRACUS085",
			"value": ""
		},
		{
			"key": "DatLimERS69",
			"value": ""
		},
		{
			"key": "RefNumHEA4",
			"value": ""
		},
		{
			"key": "IntConRefMES11",
			"value": ""
		},
		{
			"key": "preparationDateAndTime",
			"value": ""
		},
		{
			"key": "ArrNotDatHEA141",
			"value": ""
		},
		{
			"key": "UnlDatREM67",
			"value": ""
		},
		{
			"key": "LRN",
			"value": ""
		},
		{
			"key": "limitDate",
			"value": ""
		},
		{
			"key": "arrivalTime",
			"value": ""
		},
		{
			"key": "messageIdentification",
			"value": ""
		},
		{
			"key": "requestDateAndTime",
			"value": ""
		},
		{
			"key": "decisionDateAndTime",
			"value": ""
		},
		{
			"key": "arrivalNotificationDateAndTime",
			"value": ""
		},
		{
			"key": "unloadingDate",
			"value": ""
		}
	]
}